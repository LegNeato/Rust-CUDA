   Compiling libc v0.2.172
   Compiling shlex v1.3.0
   Compiling proc-macro2 v1.0.95
   Compiling unicode-ident v1.0.18
   Compiling cfg-if v1.0.0
   Compiling pkg-config v0.3.32
   Compiling bitflags v2.9.1
   Compiling memchr v2.7.4
   Compiling glob v0.3.2
   Compiling prettyplease v0.2.33
   Compiling regex-syntax v0.8.5
   Compiling either v1.15.0
   Compiling vcpkg v0.2.15
   Compiling minimal-lexical v0.2.1
   Compiling log v0.4.27
   Compiling bindgen v0.71.1
   Compiling rustc-hash v2.1.1
   Compiling bimap v0.6.3
   Compiling rustix v1.0.7
   Compiling libloading v0.8.8
   Compiling once_cell v1.21.3
   Compiling serde v1.0.219
   Compiling libm v0.2.15
   Compiling linux-raw-sys v0.9.4
   Compiling semver-parser v0.7.0
   Compiling semver v1.0.26
   Compiling curl v0.4.47
   Compiling serde_json v1.0.140
   Compiling itertools v0.13.0
   Compiling autocfg v1.4.0
   Compiling tracing-core v0.1.33
   Compiling openssl-probe v0.1.6
   Compiling itoa v1.0.15
   Compiling ryu v1.0.20
   Compiling regex-syntax v0.6.29
   Compiling semver v0.6.0
   Compiling static_assertions v1.1.0
   Compiling adler2 v2.0.0
   Compiling clang-sys v1.8.1
   Compiling twox-hash v1.6.3
   Compiling crc32fast v1.4.2
   Compiling miniz_oxide v0.8.8
   Compiling build-helper v0.1.1
   Compiling nom v7.1.3
   Compiling hashbrown v0.15.3
   Compiling num-traits v0.2.19
   Compiling overload v0.1.1
   Compiling object v0.36.7
   Compiling lazy_static v1.5.0
   Compiling equivalent v1.0.2
   Compiling quote v1.0.40
   Compiling pin-project-lite v0.2.16
   Compiling sharded-slab v0.1.7
   Compiling nu-ansi-term v0.46.0
   Compiling tracing-log v0.2.0
   Compiling ruzstd v0.7.3
   Compiling rustc_version v0.4.1
   Compiling thread_local v1.1.8
   Compiling fallible-iterator v0.3.0
   Compiling zerocopy v0.8.25
   Compiling syn v2.0.101
   Compiling flate2 v1.1.1
   Compiling smallvec v1.15.0
   Compiling stable_deref_trait v1.2.0
   Compiling itertools v0.14.0
   Compiling jobserver v0.1.33
   Compiling socket2 v0.5.10
   Compiling filetime v0.2.25
   Compiling vek v0.17.1
   Compiling rustc-demangle v0.1.24
   Compiling indexmap v2.9.0
   Compiling cc v1.2.25
   Compiling mint v0.5.9
   Compiling bytemuck v1.23.0
   Compiling hex v0.4.3
   Compiling regex-automata v0.4.9
   Compiling glam v0.29.3
   Compiling getrandom v0.2.16
   Compiling rand_core v0.6.4
   Compiling gimli v0.30.0
   Compiling regex-automata v0.1.10
   Compiling cexpr v0.6.0
   Compiling xattr v1.5.0
   Compiling approx v0.5.1
   Compiling num-integer v0.1.46
   Compiling tar v0.4.44
   Compiling matchers v0.1.0
   Compiling openssl-sys v0.9.109
   Compiling libz-sys v1.1.22
   Compiling curl-sys v0.4.80+curl-8.12.1
   Compiling lzma-sys v0.1.20
   Compiling ppv-lite86 v0.2.21
   Compiling regex v1.11.1
   Compiling rand_chacha v0.3.1
   Compiling rand v0.8.5
   Compiling xz2 v0.1.7
   Compiling xz v0.1.0
   Compiling serde_derive v1.0.219
   Compiling tracing-attributes v0.1.28
   Compiling rustc_codegen_nvvm_macros v0.1.0 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
   Compiling cust_derive v0.2.0 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
   Compiling cust_core v0.1.1 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
   Compiling rustc_codegen_nvvm v0.3.0 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
   Compiling tracing v0.1.41
   Compiling tracing-subscriber v0.3.19
   Compiling cust_raw v0.11.3 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
   Compiling nvvm v0.1.1 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
   Compiling cust v0.3.2 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
   Compiling cuda_builder v0.3.0 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
   Compiling ed25519_vanity v0.1.0 (/root/ed25519-vanity-rs)
error: failed to run custom build command for `ed25519_vanity v0.1.0 (/root/ed25519-vanity-rs)`

Caused by:
  process didn't exit successfully: `/root/ed25519-vanity-rs/target/release/build/ed25519_vanity-1109df8c7bf471de/build-script-build` (exit status: 101)
  --- stdout
  cargo:rerun-if-changed=build.rs
  cargo:rerun-if-changed=kernel
  cargo:rerun-if-changed=ed25519
  cargo:rerun-if-changed=kernel
  DEBUG rustc_codegen_nvvm::nvvm: Merging object file #3 (size: 7724 bytes)
  DEBUG rustc_codegen_nvvm::nvvm: Merging object file #2 (size: 37368 bytes)
  DEBUG rustc_codegen_nvvm::nvvm: Merging object file #1 (size: 3444 bytes)
  DEBUG rustc_codegen_nvvm::nvvm: Merging object file #0 (size: 9152 bytes)
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `merged_modules`
  DEBUG rustc_codegen_nvvm::nvvm: Codegenning bitcode to PTX
  DEBUG rustc_codegen_nvvm::link: Reading object file 34: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.eubggk6bf3stbp366xmra11qs.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 33: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.ejp6258415yw2ubjadiennt6y.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 32: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.ej6oc4ynvzb3pdflswpiosmyj.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 31: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.e5jkl770l5oqu03trby2vw7yi.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 30: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.e4o7is17o90rbikygtjae922x.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 29: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.dmjg0ao5thy84atxt1tjw5ssl.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 28: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.czcf7inva6bqfhgrnxj15xfra.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 27: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.chvlxsp04asu9ocl60bjx9nnr.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 26: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.akmgt1nz834o5y0gsucxnisdz.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 25: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.97uin4gbb4wu7o1a9hfiz45yw.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 24: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.91ix4hlegt51brsi0rz8pqjxs.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 23: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.8zn3lftcpzp5fxvnlxhdhtggw.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 22: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.8m9uzewtdd9k4zwn01lnhdxom.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 21: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.8ck2eg38a27x6cis3tc4fgzwm.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 20: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.7y27lj97rzq7s2urjg5gelrzc.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 19: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.776ujmih72ixapfgijhbs9om6.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 18: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.61x4o6wzn2x2xd23hw0apshz7.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 17: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.61urp7yzh7hwptpz79pmh8pjc.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 16: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.5mo2fdxbx1ctc4g051hsbe60l.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 15: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.5836ezy3jt9x42mbo8z1rdryd.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 14: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4xhtejyezxbd4jjgzhdohdkp7.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 13: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4w3ij7bfi8ee58gwck7yqosii.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 12: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4sglfoo2vnlqcb1aq3csz29wb.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 11: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4l1akdj2hinq1a925hu8u8vh8.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 10: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4dvahuxmjjmw5kpzaj2jauqpa.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 9: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4b7otcg0hxpjswyxrd2v9x6l7.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 8: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.3f70ei74prm1nkfnofl7ghfdr.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 7: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.33dwnbkxgogqyxladop6ywol6.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 6: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.2435cfgph0zle5tvj2gjb3nmi.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 5: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.11u5b516rlma81s43rrtj1g9j.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 4: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.0zbeksizoja0wepar0pjug2ps.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 3: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.0z5jpir3dx5xvvmav265ne935.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 2: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.0uw24eo8kicx9czoboj40xyid.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 1: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.0q8gq6hmx3xxerabjr4zgrpp6.rcgu.o"
  DEBUG rustc_codegen_nvvm::link: Reading object file 0: "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.040nct8wea22sbwpjqnaog1du.rcgu.o"
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `link_tmp`
  "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.ptx"
  ], out_filename:
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libcompiler_builtins-0c9662579b4d91e2.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libcore-6832e8ca7564d772.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/librustc_std_workspace_core-c2b4e017509f6dbf.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/liballoc-ab3f592357d80b0a.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libtypenum-42f44850d8191b00.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libgeneric_array-480510444d8d286b.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libcrypto_common-78a2111d157a1d4a.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libblock_buffer-6cacb75f2adefa08.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libdigest-787ad6baf4fa9354.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libcfg_if-ecbc86090e320c98.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libsha2-1b373688a9c6ef8a.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/liblibm-7456dfb6364c295a.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libnum_traits-95914efe4e4e13f9.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libnum_integer-191d3c6576d3c691.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libapprox-cc769964750f0de3.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libvek-07d715885f55e9be.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libhalf-4c0ca127c4011abe.rlib",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libcuda_std-9da726b79a5a26e3.rlib",
  [
  ], rlibs:
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.eubggk6bf3stbp366xmra11qs.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.ejp6258415yw2ubjadiennt6y.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.ej6oc4ynvzb3pdflswpiosmyj.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.e5jkl770l5oqu03trby2vw7yi.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.e4o7is17o90rbikygtjae922x.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.dmjg0ao5thy84atxt1tjw5ssl.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.czcf7inva6bqfhgrnxj15xfra.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.chvlxsp04asu9ocl60bjx9nnr.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.akmgt1nz834o5y0gsucxnisdz.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.97uin4gbb4wu7o1a9hfiz45yw.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.91ix4hlegt51brsi0rz8pqjxs.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.8zn3lftcpzp5fxvnlxhdhtggw.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.8m9uzewtdd9k4zwn01lnhdxom.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.8ck2eg38a27x6cis3tc4fgzwm.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.7y27lj97rzq7s2urjg5gelrzc.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.776ujmih72ixapfgijhbs9om6.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.61x4o6wzn2x2xd23hw0apshz7.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.61urp7yzh7hwptpz79pmh8pjc.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.5mo2fdxbx1ctc4g051hsbe60l.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.5836ezy3jt9x42mbo8z1rdryd.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4xhtejyezxbd4jjgzhdohdkp7.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4w3ij7bfi8ee58gwck7yqosii.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4sglfoo2vnlqcb1aq3csz29wb.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4l1akdj2hinq1a925hu8u8vh8.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4dvahuxmjjmw5kpzaj2jauqpa.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.4b7otcg0hxpjswyxrd2v9x6l7.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.3f70ei74prm1nkfnofl7ghfdr.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.33dwnbkxgogqyxladop6ywol6.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.2435cfgph0zle5tvj2gjb3nmi.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.11u5b516rlma81s43rrtj1g9j.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.0zbeksizoja0wepar0pjug2ps.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.0z5jpir3dx5xvvmav265ne935.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.0uw24eo8kicx9czoboj40xyid.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.0q8gq6hmx3xxerabjr4zgrpp6.rcgu.o",
      "/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/kernel.040nct8wea22sbwpjqnaog1du.rcgu.o",
  [
  DEBUG rustc_codegen_nvvm::link: Codegenning crate into PTX, allocator: true, objects:
  DEBUG rustc_codegen_nvvm::link: Linking crate `kernel`
  DEBUG rustc_codegen_nvvm: Join codegen
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare hidden void @_ZN4core9panicking9panic_fmt17hbcd5653c6dc71186E({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture align 8 dereferenceable(48), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint noreturn nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected [1 x { [0 x i8]*, i64 }]* for param 1, got i8*; injecting bitcast
  declare void @_ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture sret align 8 dereferenceable(48), [1 x { [0 x i8]*, i64 }]* nonnull align 8) unnamed_addr #2
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture sret align 8 dereferenceable(48), [1 x { [0 x i8]*, i64 }]* nonnull align 8) unnamed_addr #2
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::fmt::Arguments<'{erased}> kind: &'{erased} core::fmt::Arguments<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::panic::PanicInfo<'{erased}> kind: core::panic::PanicInfo<'{erased}>
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare internal void @_ZN4core9panicking18panic_nounwind_fmt7runtime17hf0059e1b2d7ff0f7E({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture align 8 dereferenceable(48), i1 zeroext, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint noreturn nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: bool kind: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} () kind: &'{erased} ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} ()> kind: core::marker::PhantomData<&'{erased} ()>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [usize; 6_usize] kind: [usize; 6_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [usize; 6_usize] kind: &'{erased} [usize; 6_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: dyn [Binder { value: Trait(core::fmt::Write), bound_vars: [] }] + '{erased} kind: dyn [Binder { value: Trait(core::fmt::Write), bound_vars: [] }] + '{erased}
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut dyn [Binder { value: Trait(core::fmt::Write), bound_vars: [] }] + '{erased} kind: &'{erased} mut dyn [Binder { value: Trait(core::fmt::Write), bound_vars: [] }] + '{erased}
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::option::Option<usize> kind: core::option::Option<usize>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::fmt::Alignment kind: core::fmt::Alignment
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::option::Option<core::fmt::Alignment> kind: core::option::Option<core::fmt::Alignment>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::fmt::FormattingOptions kind: core::fmt::FormattingOptions
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::fmt::Formatter<'{erased}> kind: core::fmt::Formatter<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut core::fmt::Formatter<'{erased}> kind: &'{erased} mut core::fmt::Formatter<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::fmt::Error kind: core::fmt::Error
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::result::Result<(), core::fmt::Error> kind: core::result::Result<(), core::fmt::Error>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Binder { value: unsafe fn(core::ptr::NonNull<()>, &'^0 mut core::fmt::Formatter<'^1>) -> core::result::Result<(), core::fmt::Error>, bound_vars: [Region(BrAnon), Region(BrAnon)] } kind: Binder { value: unsafe fn(core::ptr::NonNull<()>, &'^0 mut core::fmt::Formatter<'^1>) -> core::result::Result<(), core::fmt::Error>, bound_vars: [Region(BrAnon), Region(BrAnon)] }
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const () kind: *const ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ptr::NonNull<()> kind: core::ptr::NonNull<()>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::fmt::rt::ArgumentType<'{erased}> kind: core::fmt::rt::ArgumentType<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::fmt::rt::Argument<'{erased}> kind: core::fmt::rt::Argument<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [core::fmt::rt::Argument<'{erased}>] kind: [core::fmt::rt::Argument<'{erased}>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [core::fmt::rt::Argument<'{erased}>] kind: &'{erased} [core::fmt::rt::Argument<'{erased}>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::fmt::rt::Count kind: core::fmt::rt::Count
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::fmt::rt::Alignment kind: core::fmt::rt::Alignment
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: char
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: char kind: char
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::fmt::rt::Placeholder kind: core::fmt::rt::Placeholder
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [core::fmt::rt::Placeholder] kind: [core::fmt::rt::Placeholder]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [core::fmt::rt::Placeholder] kind: &'{erased} [core::fmt::rt::Placeholder]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::option::Option<&'{erased} [core::fmt::rt::Placeholder]> kind: core::option::Option<&'{erased} [core::fmt::rt::Placeholder]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [&'{erased} str] kind: [&'{erased} str]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [&'{erased} str] kind: &'{erased} [&'{erased} str]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::fmt::Arguments<'{erased}> kind: core::fmt::Arguments<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::panic::Location<'{erased}> kind: core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::panic::Location<'{erased}> kind: &'{erased} core::panic::Location<'{erased}>
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare internal void @_ZN4core9panicking18panic_nounwind_fmt17hc7bc7e588975b6a6E({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture align 8 dereferenceable(48), i1 zeroext, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint noreturn nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected [1 x { [0 x i8]*, i64 }]* for param 1, got i8*; injecting bitcast
  declare void @_ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture sret align 8 dereferenceable(48), [1 x { [0 x i8]*, i64 }]* nonnull align 8) unnamed_addr #2
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture sret align 8 dereferenceable(48), [1 x { [0 x i8]*, i64 }]* nonnull align 8) unnamed_addr #2
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:11438 ~ core[aa73]::fmt::{impl#5}::new_const)), args: ['{erased}, 1_usize] }: FnDef(DefId(1:11438 ~ core[aa73]::fmt::{impl#5}::new_const), ['{erased}, 1_usize])) => _ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: str kind: str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} str kind: &'{erased} str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/8zn3lftcpzp5fxvnlxhdhtggw"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `8zn3lftcpzp5fxvnlxhdhtggw`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0})), args: [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)] }: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])) => _ZN110_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$generic_array$$sequence$$GenericSequence$LT$T$GT$$GT$8generate28_$u7b$$u7b$closure$u7d$$u7d$17hb8f7e155725c71ccE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]) kind: &'{erased} mut Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)])
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0})), args: [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)] }: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])) => _ZN110_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$generic_array$$sequence$$GenericSequence$LT$T$GT$$GT$8generate28_$u7b$$u7b$closure$u7d$$u7d$17h71cd3d17ea0d6bf3E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]) kind: &'{erased} mut Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]) kind: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]) kind: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut u8 kind: &'{erased} mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (usize, &'{erased} mut u8) kind: (usize, &'{erased} mut u8)
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut usize kind: &'{erased} mut usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut &'{erased} mut usize kind: &'{erased} mut &'{erased} mut usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]) kind: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]) kind: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/4dvahuxmjjmw5kpzaj2jauqpa"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `4dvahuxmjjmw5kpzaj2jauqpa`
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare hidden void @_ZN4core9panicking9panic_fmt17hbcd5653c6dc71186E({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture align 8 dereferenceable(48), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint noreturn nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture sret align 8 dereferenceable(48), [1 x { [0 x i8]*, i64 }]* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare hidden void @_ZN4core9panicking9panic_fmt17hbcd5653c6dc71186E({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture align 8 dereferenceable(48), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint noreturn nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture sret align 8 dereferenceable(48), [1 x { [0 x i8]*, i64 }]* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare hidden void @_ZN4core9panicking9panic_fmt17hbcd5653c6dc71186E({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture align 8 dereferenceable(48), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint noreturn nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture sret align 8 dereferenceable(48), [1 x { [0 x i8]*, i64 }]* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare hidden void @_ZN4core9panicking9panic_fmt17hbcd5653c6dc71186E({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture align 8 dereferenceable(48), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint noreturn nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture sret align 8 dereferenceable(48), [1 x { [0 x i8]*, i64 }]* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare hidden void @_ZN4core9panicking9panic_fmt17hbcd5653c6dc71186E({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture align 8 dereferenceable(48), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint noreturn nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10296 ~ core[aa73]::panicking::panic_fmt)), args: [] }: FnDef(DefId(1:10296 ~ core[aa73]::panicking::panic_fmt), [])) => _ZN4core9panicking9panic_fmt17hbcd5653c6dc71186E
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture sret align 8 dereferenceable(48), [1 x { [0 x i8]*, i64 }]* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:11438 ~ core[aa73]::fmt::{impl#5}::new_const)), args: ['{erased}, 1_usize] }: FnDef(DefId(1:11438 ~ core[aa73]::fmt::{impl#5}::new_const), ['{erased}, 1_usize])) => _ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: str kind: str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} str kind: &'{erased} str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::panic::Location<'{erased}> kind: core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::panic::Location<'{erased}> kind: &'{erased} core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panicking.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/akmgt1nz834o5y0gsucxnisdz"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `akmgt1nz834o5y0gsucxnisdz`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:12424 ~ core[aa73]::slice::index::{impl#4}::index_mut)), args: [u8] }: FnDef(DefId(1:12424 ~ core[aa73]::slice::index::{impl#4}::index_mut), [u8])) => _ZN106_$LT$core$$ops$$range$$Range$LT$usize$GT$$u20$as$u20$core$$slice$$index$$SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h1fca47dcb7317faaE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/index.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/index.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>; 1_usize] kind: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>; 1_usize]
  ). Expected [0 x i8]* for param 0, got [64 x i8]*; injecting bitcast
  declare internal { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core$$ops$$index$$IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hf77fc209d5c9cfe6E"([0 x i8]* nonnull align 1, i64, i64, i64, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: str kind: str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} str kind: &'{erased} str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::panic::Location<'{erased}> kind: core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::panic::Location<'{erased}> kind: &'{erased} core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ops::Range<usize> kind: core::ops::Range<usize>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 64_usize] kind: [u8; 64_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut [u8; 64_usize] kind: &'{erased} mut [u8; 64_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8] kind: [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut [u8] kind: &'{erased} mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/array/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/array/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: *const sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>; 1_usize] kind: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>; 1_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>; 1_usize] kind: *const [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>; 1_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/61x4o6wzn2x2xd23hw0apshz7"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `61x4o6wzn2x2xd23hw0apshz7`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:4564 ~ core[aa73]::array::from_ref)), args: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] }: FnDef(DefId(1:4564 ~ core[aa73]::array::from_ref), [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>])) => _ZN4core5array8from_ref17h61adf0d3da76b577E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2872 ~ core[aa73]::ptr::slice_from_raw_parts)), args: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] }: FnDef(DefId(1:2872 ~ core[aa73]::ptr::slice_from_raw_parts), [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>])) => _ZN4core3ptr20slice_from_raw_parts17h41130768a2c87850E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:40895 ~ core[aa73]::slice::raw::from_raw_parts::precondition_check)), args: [] }: FnDef(DefId(1:40895 ~ core[aa73]::slice::raw::from_raw_parts::precondition_check), [])) => _ZN4core5slice3raw14from_raw_parts18precondition_check17ha00372a2926d839bE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2956 ~ core[aa73]::ub_checks::check_language_ub)), args: [] }: FnDef(DefId(1:2956 ~ core[aa73]::ub_checks::check_language_ub), [])) => _ZN4core9ub_checks17check_language_ub17hfaa6a2ee487d6951E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: *const sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/raw.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/raw.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/chvlxsp04asu9ocl60bjx9nnr"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `chvlxsp04asu9ocl60bjx9nnr`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:28015 ~ core[aa73]::ops::arith::{impl#131}::mul)), args: [] }: FnDef(DefId(1:28015 ~ core[aa73]::ops::arith::{impl#131}::mul), [])) => _ZN45_$LT$u32$u20$as$u20$core$$ops$$arith$$Mul$GT$3mul17h3e2997be7281f5a0E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vek-0.17.1/src/vec.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vek-0.17.1/src/vec.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: cuda_std::vek::Vec3<u32> kind: cuda_std::vek::Vec3<u32>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/0q8gq6hmx3xxerabjr4zgrpp6"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `0q8gq6hmx3xxerabjr4zgrpp6`
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: *const core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: *const core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:25821 ~ core[aa73]::ptr::read::precondition_check)), args: [] }: FnDef(DefId(1:25821 ~ core[aa73]::ptr::read::precondition_check), [])) => _ZN4core3ptr4read18precondition_check17h2bcf8f33ed71e7e1E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2956 ~ core[aa73]::ub_checks::check_language_ub)), args: [] }: FnDef(DefId(1:2956 ~ core[aa73]::ub_checks::check_language_ub), [])) => _ZN4core9ub_checks17check_language_ub17hfaa6a2ee487d6951E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const [u8; 64_usize] kind: *const [u8; 64_usize]
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2378 ~ core[aa73]::ptr::metadata::from_raw_parts)), args: [[sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>], sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] }: FnDef(DefId(1:2378 ~ core[aa73]::ptr::metadata::from_raw_parts), [[sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>], sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>])) => _ZN4core3ptr8metadata14from_raw_parts17h7d0ae4bd9fa4e927E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: *const sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: *const [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 64_usize] kind: [u8; 64_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/ejp6258415yw2ubjadiennt6y"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `ejp6258415yw2ubjadiennt6y`
  ). Expected { { { [64 x i8] }, i64 } }* for param 0, got i8*; injecting bitcast
  }
    ret void, !dbg !151
    call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 72, i1 false), !dbg !150
    %3 = bitcast { { [64 x i8] }, i64 }* %1 to i8*, !dbg !150
    %2 = bitcast { { { [64 x i8] }, i64 } }* %0 to i8*, !dbg !150
    call void @llvm.dbg.declare(metadata { { [64 x i8] }, i64 }* %1, metadata !148, metadata !DIExpression()), !dbg !149
  start:
  define internal void @"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h56799c873dfa8301E"({ { { [64 x i8] }, i64 } }* noalias nocapture sret align 8 dereferenceable(72), { { [64 x i8] }, i64 }* noalias nocapture align 8 dereferenceable(72)) unnamed_addr #0 !dbg !2 {
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { [128 x i8] }, i64 } }* for param 0, got i8*; injecting bitcast
  }
    ret void, !dbg !196
    call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 136, i1 false), !dbg !195
    %3 = bitcast { { [128 x i8] }, i64 }* %1 to i8*, !dbg !195
    %2 = bitcast { { { [128 x i8] }, i64 } }* %0 to i8*, !dbg !195
    call void @llvm.dbg.declare(metadata { { [128 x i8] }, i64 }* %1, metadata !193, metadata !DIExpression()), !dbg !194
  start:
  define internal void @"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb732d1643ed28031E"({ { { [128 x i8] }, i64 } }* noalias nocapture sret align 8 dereferenceable(136), { { [128 x i8] }, i64 }* noalias nocapture align 8 dereferenceable(136)) unnamed_addr #0 !dbg !152 {
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::ManuallyDrop<sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::ManuallyDrop<sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::ManuallyDrop<sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::ManuallyDrop<sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/11u5b516rlma81s43rrtj1g9j"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `11u5b516rlma81s43rrtj1g9j`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:12579 ~ core[aa73]::slice::iter::{impl#6}::new)), args: ['{erased}, u64] }: FnDef(DefId(1:12579 ~ core[aa73]::slice::iter::{impl#6}::new), ['{erased}, u64])) => _ZN4core5slice4iter13Iter$LT$T$GT$3new17h9caec572c36ac217E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u64] kind: [u64]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [u64] kind: &'{erased} [u64]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} u64 kind: &'{erased} u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} u64> kind: core::marker::PhantomData<&'{erased} u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const u64 kind: *const u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ptr::NonNull<u64> kind: core::ptr::NonNull<u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::Iter<'{erased}, u64> kind: core::slice::Iter<'{erased}, u64>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut)), args: ['{erased}, u8] }: FnDef(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut), ['{erased}, u8])) => _ZN4core5slice3raw18from_raw_parts_mut17h0b15c6eeb412adb8E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:40901 ~ core[aa73]::slice::{impl#0}::split_at_mut_unchecked::precondition_check)), args: [] }: FnDef(DefId(1:40901 ~ core[aa73]::slice::{impl#0}::split_at_mut_unchecked::precondition_check), [])) => _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked18precondition_check17he0bcb88ad1bc973cE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (&'{erased} mut [u8], &'{erased} mut [u8]) kind: (&'{erased} mut [u8], &'{erased} mut [u8])
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13048 ~ core[aa73]::slice::iter::{impl#97}::new)), args: ['{erased}, u8] }: FnDef(DefId(1:13048 ~ core[aa73]::slice::iter::{impl#97}::new), ['{erased}, u8])) => _ZN4core5slice4iter23ChunksExactMut$LT$T$GT$3new17ha5b9700c82ce6b00E
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare hidden void @_ZN4core9panicking9panic_fmt17hbcd5653c6dc71186E({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture align 8 dereferenceable(48), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #3
  ; Function Attrs: inlinehint noreturn nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10296 ~ core[aa73]::panicking::panic_fmt)), args: [] }: FnDef(DefId(1:10296 ~ core[aa73]::panicking::panic_fmt), [])) => _ZN4core9panicking9panic_fmt17hbcd5653c6dc71186E
  ). Expected { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE({ { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { { {}*, [1 x i64] } }]*, i64 }, { i64*, i64 } }* noalias nocapture sret align 8 dereferenceable(48), [1 x { [0 x i8]*, i64 }]* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:11438 ~ core[aa73]::fmt::{impl#5}::new_const)), args: ['{erased}, 1_usize] }: FnDef(DefId(1:11438 ~ core[aa73]::fmt::{impl#5}::new_const), ['{erased}, 1_usize])) => _ZN4core3fmt9Arguments9new_const17hdf2f30aca51edfbdE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: str kind: str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} str kind: &'{erased} str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::panic::Location<'{erased}> kind: core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::panic::Location<'{erased}> kind: &'{erased} core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut u8 kind: &'{erased} mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} mut u8> kind: core::marker::PhantomData<&'{erased} mut u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut [u8] kind: *mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::ChunksExactMut<'{erased}, u8> kind: core::slice::ChunksExactMut<'{erased}, u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8] kind: [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut [u8] kind: &'{erased} mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/mod.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:25810 ~ core[aa73]::ptr::mut_ptr::{impl#0}::add::precondition_check)), args: [] }: FnDef(DefId(1:25810 ~ core[aa73]::ptr::mut_ptr::{impl#0}::add::precondition_check), [])) => _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17hc776c183d9ddbe30E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2956 ~ core[aa73]::ub_checks::check_language_ub)), args: [] }: FnDef(DefId(1:2956 ~ core[aa73]::ub_checks::check_language_ub), [])) => _ZN4core9ub_checks17check_language_ub17hfaa6a2ee487d6951E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut u8 kind: *mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/0z5jpir3dx5xvvmav265ne935"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `0z5jpir3dx5xvvmav265ne935`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind)), args: [] }: FnDef(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind), [])) => _ZN4core9panicking14panic_nounwind17h498976f1d67cfc09E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2958 ~ core[aa73]::ub_checks::is_valid_allocation_size)), args: [] }: FnDef(DefId(1:2958 ~ core[aa73]::ub_checks::is_valid_allocation_size), [])) => _ZN4core9ub_checks24is_valid_allocation_size17h5ed1b02fa7206ab2E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2957 ~ core[aa73]::ub_checks::maybe_is_aligned_and_not_null)), args: [] }: FnDef(DefId(1:2957 ~ core[aa73]::ub_checks::maybe_is_aligned_and_not_null), [])) => _ZN4core9ub_checks29maybe_is_aligned_and_not_null17h0351eeddf57b6bf9E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/raw.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/raw.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut () kind: *mut ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/2435cfgph0zle5tvj2gjb3nmi"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `2435cfgph0zle5tvj2gjb3nmi`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2649 ~ core[aa73]::ptr::const_ptr::{impl#0}::is_null)), args: [()] }: FnDef(DefId(1:2649 ~ core[aa73]::ptr::const_ptr::{impl#0}::is_null), [()])) => _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha8ead701673c76d2E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2699 ~ core[aa73]::ptr::const_ptr::{impl#0}::is_aligned_to)), args: [()] }: FnDef(DefId(1:2699 ~ core[aa73]::ptr::const_ptr::{impl#0}::is_aligned_to), [()])) => _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17he1547736758cea5aE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const () kind: *const ()
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38847 ~ core[aa73]::panicking::panic_const::panic_const_div_by_zero)), args: [] }: FnDef(DefId(1:38847 ~ core[aa73]::panicking::panic_const::panic_const_div_by_zero), [])) => _ZN4core9panicking11panic_const23panic_const_div_by_zero17h3f991d4a26d38227E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: bool kind: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/eubggk6bf3stbp366xmra11qs"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `eubggk6bf3stbp366xmra11qs`
  ). Expected [8 x i64]* for param 0, got { [8 x i64], i128 }*; injecting bitcast
  declare void @_ZN4sha26sha51211compress51217hb537a4820e7166c7E([8 x i64]* nonnull align 8, [0 x { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }]* nonnull align 1, i64) unnamed_addr #2
  ; Function Attrs: nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(5:91 ~ sha2[bfc0]::sha512::compress512)), args: [] }: FnDef(DefId(5:91 ~ sha2[bfc0]::sha512::compress512), [])) => _ZN4sha26sha51211compress51217hb537a4820e7166c7E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13451 ~ core[aa73]::slice::raw::from_ref)), args: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] }: FnDef(DefId(1:13451 ~ core[aa73]::slice::raw::from_ref), [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>])) => _ZN4core5slice3raw8from_ref17he5225ee2d5924704E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u128 kind: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u64; 8_usize] kind: [u64; 8_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::Sha512VarCore kind: sha2::Sha512VarCore
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::Sha512VarCore kind: &'{erased} mut sha2::Sha512VarCore
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut &'{erased} mut sha2::Sha512VarCore kind: &'{erased} mut &'{erased} mut sha2::Sha512VarCore
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(5:75 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core::{closure#0}), [i16, Binder { value: extern "RustCall" fn((&'^0 sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>,)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::Sha512VarCore,)]) kind: Closure(DefId(5:75 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core::{closure#0}), [i16, Binder { value: extern "RustCall" fn((&'^0 sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>,)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::Sha512VarCore,)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(5:75 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core::{closure#0}), [i16, Binder { value: extern "RustCall" fn((&'^0 sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>,)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::Sha512VarCore,)]) kind: &'{erased} mut Closure(DefId(5:75 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core::{closure#0}), [i16, Binder { value: extern "RustCall" fn((&'^0 sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>,)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::Sha512VarCore,)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.9/src/core_api.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.9/src/core_api.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/040nct8wea22sbwpjqnaog1du"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `040nct8wea22sbwpjqnaog1du`
  ). Expected { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN92_$LT$block_buffer$$BlockBuffer$LT$BlockSize$C$Kind$GT$$u20$as$u20$core$$default$$Default$GT$7default17h2f39dc84f5924f3fE"({ { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* noalias nocapture sret align 1 dereferenceable(129)) unnamed_addr #2
  ; Function Attrs: nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(10:47 ~ block_buffer[1603]::{impl#3}::default)), args: [sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager] }: FnDef(DefId(10:47 ~ block_buffer[1603]::{impl#3}::default), [sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager])) => _ZN92_$LT$block_buffer$$BlockBuffer$LT$BlockSize$C$Kind$GT$$u20$as$u20$core$$default$$Default$GT$7default17h2f39dc84f5924f3fE
  ). Expected { { [8 x i64], i128 }, {} }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN118_$LT$digest$$core_api$$ct_variable$$CtVariableCoreWrapper$LT$T$C$OutSize$C$O$GT$$u20$as$u20$core$$default$$Default$GT$7default17he52cecc15b459268E"({ { [8 x i64], i128 }, {} }* noalias nocapture sret align 16 dereferenceable(80)) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(6:82 ~ digest[a657]::core_api::ct_variable::{impl#6}::default)), args: [sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512] }: FnDef(DefId(6:82 ~ digest[a657]::core_api::ct_variable::{impl#6}::default), [sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512])) => _ZN118_$LT$digest$$core_api$$ct_variable$$CtVariableCoreWrapper$LT$T$C$OutSize$C$O$GT$$u20$as$u20$core$$default$$Default$GT$7default17he52cecc15b459268E
  ). Expected { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* for param 1, got i8*; injecting bitcast
  declare void @"_ZN129_$LT$digest$$core_api$$ct_variable$$CtVariableCoreWrapper$LT$T$C$OutSize$C$O$GT$$u20$as$u20$digest$$core_api$$FixedOutputCore$GT$19finalize_fixed_core17h5590321685c42a09E"({ { [8 x i64], i128 }, {} }* nonnull align 16, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1, { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [8 x i64], i128 }, {} }* for param 0, got { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }*; injecting bitcast
  declare void @"_ZN129_$LT$digest$$core_api$$ct_variable$$CtVariableCoreWrapper$LT$T$C$OutSize$C$O$GT$$u20$as$u20$digest$$core_api$$FixedOutputCore$GT$19finalize_fixed_core17h5590321685c42a09E"({ { [8 x i64], i128 }, {} }* nonnull align 16, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1, { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(6:77 ~ digest[a657]::core_api::ct_variable::{impl#5}::finalize_fixed_core)), args: [sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512] }: FnDef(DefId(6:77 ~ digest[a657]::core_api::ct_variable::{impl#5}::finalize_fixed_core), [sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512])) => _ZN129_$LT$digest$$core_api$$ct_variable$$CtVariableCoreWrapper$LT$T$C$OutSize$C$O$GT$$u20$as$u20$digest$$core_api$$FixedOutputCore$GT$19finalize_fixed_core17h5590321685c42a09E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(6:62 ~ digest[a657]::core_api::ct_variable::{impl#2}::update_blocks)), args: [sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512] }: FnDef(DefId(6:62 ~ digest[a657]::core_api::ct_variable::{impl#2}::update_blocks), [sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512])) => _ZN124_$LT$digest$$core_api$$ct_variable$$CtVariableCoreWrapper$LT$T$C$OutSize$C$O$GT$$u20$as$u20$digest$$core_api$$UpdateCore$GT$13update_blocks17hb284bebc648df951E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512> kind: &'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(6:199 ~ digest[a657]::core_api::wrapper::{impl#7}::update::{closure#0}), [sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>, i16, Binder { value: extern "RustCall" fn((&'^0 [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>],)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>,)]) kind: Closure(DefId(6:199 ~ digest[a657]::core_api::wrapper::{impl#7}::update::{closure#0}), [sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>, i16, Binder { value: extern "RustCall" fn((&'^0 [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>],)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>,)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(6:199 ~ digest[a657]::core_api::wrapper::{impl#7}::update::{closure#0}), [sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>, i16, Binder { value: extern "RustCall" fn((&'^0 [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>],)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>,)]) kind: &'{erased} mut Closure(DefId(6:199 ~ digest[a657]::core_api::wrapper::{impl#7}::update::{closure#0}), [sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>, i16, Binder { value: extern "RustCall" fn((&'^0 [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>],)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>,)])
  ). Expected i64* for param 3, got i8*; injecting bitcast
  declare void @"_ZN12block_buffer35BlockBuffer$LT$BlockSize$C$Kind$GT$13digest_blocks17h7504c0a49857f5d8E"({ { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1, [0 x i8]* nonnull align 1, i64, i64* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN12block_buffer35BlockBuffer$LT$BlockSize$C$Kind$GT$13digest_blocks17h7504c0a49857f5d8E"({ { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1, [0 x i8]* nonnull align 1, i64, i64* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(10:57 ~ block_buffer[1603]::{impl#5}::digest_blocks)), args: [sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager, Closure(DefId(6:199 ~ digest[a657]::core_api::wrapper::{impl#7}::update::{closure#0}), [sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>, i16, Binder { value: extern "RustCall" fn((&'^0 [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>],)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>,)])] }: FnDef(DefId(10:57 ~ block_buffer[1603]::{impl#5}::digest_blocks), [sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager, Closure(DefId(6:199 ~ digest[a657]::core_api::wrapper::{impl#7}::update::{closure#0}), [sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>, i16, Binder { value: extern "RustCall" fn((&'^0 [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>],)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>,)])])) => _ZN12block_buffer35BlockBuffer$LT$BlockSize$C$Kind$GT$13digest_blocks17h7504c0a49857f5d8E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager> kind: &'{erased} mut sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512> kind: &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/core_api/wrapper.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/core_api/wrapper.rs"))
  ). Expected { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 1, got i8*; injecting bitcast
  declare void @"_ZN87_$LT$digest$$core_api$$wrapper$$CoreWrapper$LT$T$GT$$u20$as$u20$digest$$FixedOutput$GT$13finalize_into17h2ff58d91453fb467E"({ { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* noalias nocapture align 16 dereferenceable(224), { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got i8*; injecting bitcast
  }
    ret void, !dbg !128
    call void @"_ZN110_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$generic_array$$sequence$$GenericSequence$LT$T$GT$$GT$8generate17h6317d56025fcaae9E"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture align 1 dereferenceable(64) %0), !dbg !127
  start:
  define internal void @"_ZN13generic_array5impls93_$LT$impl$u20$core$$default$$Default$u20$for$u20$generic_array$$GenericArray$LT$T$C$N$GT$$GT$7default17hdc75b4acbfde565eE"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(64)) unnamed_addr #0 !dbg !2 {
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/lib.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/lib.rs"))
  ). Expected { [0 x i8]*, i64 }* for param 0, got i8*; injecting bitcast
  declare { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core$$convert$$AsRef$LT$U$GT$$GT$6as_ref17hcb28d9f3983c7a26E"({ [0 x i8]*, i64 }* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:3272 ~ core[aa73]::convert::{impl#0}::as_ref)), args: ['{erased}, [u8], [u8]] }: FnDef(DefId(1:3272 ~ core[aa73]::convert::{impl#0}::as_ref), ['{erased}, [u8], [u8]])) => _ZN55_$LT$$RF$T$u20$as$u20$core$$convert$$AsRef$LT$U$GT$$GT$6as_ref17hcb28d9f3983c7a26E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8] kind: [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [u8] kind: &'{erased} [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>> kind: &'{erased} mut sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::block_buffer::Eager kind: sha2::digest::block_buffer::Eager
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<sha2::digest::block_buffer::Eager> kind: core::marker::PhantomData<sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager> kind: sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::OidSha512 kind: sha2::OidSha512
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512) kind: (sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<(sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)> kind: core::marker::PhantomData<(sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u128 kind: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u64; 8_usize] kind: [u64; 8_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::Sha512VarCore kind: sha2::Sha512VarCore
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512> kind: sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>> kind: sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/digest.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/digest.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(8:476 ~ generic_array[47b5]::{impl#18}::generate)), args: [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])] }: FnDef(DefId(8:476 ~ generic_array[47b5]::{impl#18}::generate), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])])) => _ZN110_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$generic_array$$sequence$$GenericSequence$LT$T$GT$$GT$8generate17h6317d56025fcaae9E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/5836ezy3jt9x42mbo8z1rdryd"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `5836ezy3jt9x42mbo8z1rdryd`
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: f32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: f32 kind: f32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::cell::UnsafeCell<f32> kind: core::cell::UnsafeCell<f32>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: cuda_std::atomic::AtomicF32 kind: cuda_std::atomic::AtomicF32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut cuda_std::atomic::AtomicF32 kind: *mut cuda_std::atomic::AtomicF32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const u8 kind: *const u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut u32 kind: *mut u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut u8 kind: *mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/ed25519-vanity-rs/kernel/src/lib.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("src/lib.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/61urp7yzh7hwptpz79pmh8pjc"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `61urp7yzh7hwptpz79pmh8pjc`
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:25120 ~ core[aa73]::num::{impl#11}::checked_mul)), args: [] }: FnDef(DefId(1:25120 ~ core[aa73]::num::{impl#11}::checked_mul), [])) => _ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h167acea08b41275eE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind)), args: [] }: FnDef(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind), [])) => _ZN4core9panicking14panic_nounwind17h498976f1d67cfc09E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const () kind: *const ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: bool kind: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (usize, bool) kind: (usize, bool)
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/4w3ij7bfi8ee58gwck7yqosii"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `4w3ij7bfi8ee58gwck7yqosii`
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/8m9uzewtdd9k4zwn01lnhdxom"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `8m9uzewtdd9k4zwn01lnhdxom`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:25120 ~ core[aa73]::num::{impl#11}::checked_mul)), args: [] }: FnDef(DefId(1:25120 ~ core[aa73]::num::{impl#11}::checked_mul), [])) => _ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h167acea08b41275eE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind)), args: [] }: FnDef(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind), [])) => _ZN4core9panicking14panic_nounwind17h498976f1d67cfc09E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const () kind: *const ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: bool kind: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (usize, bool) kind: (usize, bool)
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/4b7otcg0hxpjswyxrd2v9x6l7"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `4b7otcg0hxpjswyxrd2v9x6l7`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:40576 ~ core[aa73]::slice::index::slice_end_index_len_fail::do_panic::runtime)), args: [] }: FnDef(DefId(1:40576 ~ core[aa73]::slice::index::slice_end_index_len_fail::do_panic::runtime), [])) => _ZN4core5slice5index24slice_end_index_len_fail8do_panic7runtime17h8d6b3c40a3380270E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:40579 ~ core[aa73]::slice::index::slice_index_order_fail::do_panic::runtime)), args: [] }: FnDef(DefId(1:40579 ~ core[aa73]::slice::index::slice_index_order_fail::do_panic::runtime), [])) => _ZN4core5slice5index22slice_index_order_fail8do_panic7runtime17hc9cfb3928b5d7a18E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: str kind: str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} str kind: &'{erased} str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::panic::Location<'{erased}> kind: core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::panic::Location<'{erased}> kind: &'{erased} core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/index.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/index.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/ej6oc4ynvzb3pdflswpiosmyj"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `ej6oc4ynvzb3pdflswpiosmyj`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:9171 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call)), args: [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])] }: FnDef(DefId(1:9171 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])])) => _ZN4core4iter6traits8iterator8Iterator8for_each4call17h4ef19a9b25db32e7E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:9171 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call)), args: [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])] }: FnDef(DefId(1:9171 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])])) => _ZN4core4iter6traits8iterator8Iterator8for_each4call17h152fc49514d398a7E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs"))
  ). Expected { i8*, i8* }* for param 0, got { { i8*, i8* }, i64 }*; injecting bitcast
  declare void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hbbebe74e5b19c15cE"({ i8*, i8* }* nonnull align 8, i64, i8* nonnull align 1) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0})), args: [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)] }: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)])) => _ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hbbebe74e5b19c15cE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)]) kind: &'{erased} mut Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow)), args: [] }: FnDef(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_add_overflow17h6c8c98a9847b65eeE
  ). Expected { i8*, i8* }* for param 0, got { { i8*, i8* }, i64 }*; injecting bitcast
  declare void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17haec3e94d65ea64eeE"({ i8*, i8* }* nonnull align 8, i64, i8* nonnull align 1) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0})), args: [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)] }: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)])) => _ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17haec3e94d65ea64eeE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)]) kind: &'{erased} mut Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)]) kind: Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)]) kind: Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])
  ). Expected { { i8*, i8* }, i64 }* for param 2, got i8*; injecting bitcast
  declare void @"_ZN94_$LT$core$$slice$$iter$$IterMut$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4fold17h24b08e4bdbf2a535E"(i8* nonnull, i8*, { { i8*, i8* }, i64 }* noalias nocapture align 8 dereferenceable(24)) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:40668 ~ core[aa73]::slice::iter::{impl#190}::fold)), args: ['{erased}, u8, (), Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])] }: FnDef(DefId(1:40668 ~ core[aa73]::slice::iter::{impl#190}::fold), ['{erased}, u8, (), Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])])) => _ZN94_$LT$core$$slice$$iter$$IterMut$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4fold17h24b08e4bdbf2a535E
  ). Expected { { i8*, i8* }, i64 }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN110_$LT$core$$iter$$adapters$$enumerate$$Enumerate$LT$I$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4fold9enumerate17h64bf6dbf1ca10458E"({ { i8*, i8* }, i64 }* noalias nocapture sret align 8 dereferenceable(24), i64, i8* nonnull align 1, i8* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]) kind: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]) kind: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)])
  ). Expected { { i8*, i8* }, i64 }* for param 2, got i8*; injecting bitcast
  declare void @"_ZN94_$LT$core$$slice$$iter$$IterMut$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4fold17h96e0fe6989537da1E"(i8* nonnull, i8*, { { i8*, i8* }, i64 }* noalias nocapture align 8 dereferenceable(24)) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:40668 ~ core[aa73]::slice::iter::{impl#190}::fold)), args: ['{erased}, u8, (), Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])] }: FnDef(DefId(1:40668 ~ core[aa73]::slice::iter::{impl#190}::fold), ['{erased}, u8, (), Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])])) => _ZN94_$LT$core$$slice$$iter$$IterMut$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4fold17h96e0fe6989537da1E
  ). Expected { { i8*, i8* }, i64 }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN110_$LT$core$$iter$$adapters$$enumerate$$Enumerate$LT$I$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4fold9enumerate17h23d299336e215c49E"({ { i8*, i8* }, i64 }* noalias nocapture sret align 8 dereferenceable(24), i64, i8* nonnull align 1, i8* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut usize kind: &'{erased} mut usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut &'{erased} mut usize kind: &'{erased} mut &'{erased} mut usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]) kind: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]) kind: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut u8 kind: &'{erased} mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} mut u8> kind: core::marker::PhantomData<&'{erased} mut u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut u8 kind: *mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const u8 kind: *const u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ptr::NonNull<u8> kind: core::ptr::NonNull<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::IterMut<'{erased}, u8> kind: core::slice::IterMut<'{erased}, u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::iter::Enumerate<core::slice::IterMut<'{erased}, u8>> kind: core::iter::Enumerate<core::slice::IterMut<'{erased}, u8>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/enumerate.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/enumerate.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/0zbeksizoja0wepar0pjug2ps"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `0zbeksizoja0wepar0pjug2ps`
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} &'{erased} [u8] kind: &'{erased} &'{erased} [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8] kind: [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [u8] kind: &'{erased} [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/4l1akdj2hinq1a925hu8u8vh8"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `4l1akdj2hinq1a925hu8u8vh8`
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs"))
  ). Expected { i8*, i8* }* for param 0, got i8*; injecting bitcast
  declare nonnull align 8 i64* @"_ZN91_$LT$core$$slice$$iter$$Iter$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$24__iterator_get_unchecked17h6b7eedf06479b6d1E"({ i8*, i8* }* nonnull align 8, i64) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:40626 ~ core[aa73]::slice::iter::{impl#182}::__iterator_get_unchecked)), args: ['{erased}, u64] }: FnDef(DefId(1:40626 ~ core[aa73]::slice::iter::{impl#182}::__iterator_get_unchecked), ['{erased}, u64])) => _ZN91_$LT$core$$slice$$iter$$Iter$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$24__iterator_get_unchecked17h6b7eedf06479b6d1E
  ). Expected { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }* for param 0, got { { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }*; injecting bitcast
  declare { [0 x i8]*, i64 } @"_ZN101_$LT$core$$slice$$iter$$ChunksExactMut$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$24__iterator_get_unchecked17hd51fc153e60fda6eE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }* nonnull align 8, i64) unnamed_addr #1
  ; Function Attrs: nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13059 ~ core[aa73]::slice::iter::{impl#98}::__iterator_get_unchecked)), args: ['{erased}, u8] }: FnDef(DefId(1:13059 ~ core[aa73]::slice::iter::{impl#98}::__iterator_get_unchecked), ['{erased}, u8])) => _ZN101_$LT$core$$slice$$iter$$ChunksExactMut$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$24__iterator_get_unchecked17hd51fc153e60fda6eE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow)), args: [] }: FnDef(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_add_overflow17h6c8c98a9847b65eeE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:3111 ~ core[aa73]::cmp::min)), args: [usize] }: FnDef(DefId(1:3111 ~ core[aa73]::cmp::min), [usize])) => _ZN4core3cmp3min17h0baa6316e765585bE
  ). Expected { i8*, i8* }* for param 0, got i8*; injecting bitcast
  declare i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hf1e2dafd63b6f08fE({ i8*, i8* }* nonnull align 8) unnamed_addr #1
  ; Function Attrs: nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:8417 ~ core[aa73]::iter::adapters::zip::TrustedRandomAccessNoCoerce::size)), args: [core::slice::Iter<'{erased}, u64>] }: FnDef(DefId(1:8417 ~ core[aa73]::iter::adapters::zip::TrustedRandomAccessNoCoerce::size), [core::slice::Iter<'{erased}, u64>])) => _ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hf1e2dafd63b6f08fE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:8417 ~ core[aa73]::iter::adapters::zip::TrustedRandomAccessNoCoerce::size)), args: [core::slice::ChunksExactMut<'{erased}, u8>] }: FnDef(DefId(1:8417 ~ core[aa73]::iter::adapters::zip::TrustedRandomAccessNoCoerce::size), [core::slice::ChunksExactMut<'{erased}, u8>])) => _ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hc43d9f31df3a08f6E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} u64> kind: core::marker::PhantomData<&'{erased} u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const u64 kind: *const u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ptr::NonNull<u64> kind: core::ptr::NonNull<u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::Iter<'{erased}, u64> kind: core::slice::Iter<'{erased}, u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut u8 kind: &'{erased} mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} mut u8> kind: core::marker::PhantomData<&'{erased} mut u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut [u8] kind: *mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::ChunksExactMut<'{erased}, u8> kind: core::slice::ChunksExactMut<'{erased}, u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::iter::Zip<core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>> kind: core::iter::Zip<core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut core::iter::Zip<core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>> kind: &'{erased} mut core::iter::Zip<core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} u64 kind: &'{erased} u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8] kind: [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut [u8] kind: &'{erased} mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (&'{erased} mut [u8], &'{erased} u64) kind: (&'{erased} mut [u8], &'{erased} u64)
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::option::Option<(&'{erased} mut [u8], &'{erased} u64)> kind: core::option::Option<(&'{erased} mut [u8], &'{erased} u64)>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/zip.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/zip.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/33dwnbkxgogqyxladop6ywol6"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `33dwnbkxgogqyxladop6ywol6`
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [u64] kind: &'{erased} [u64]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u64] kind: [u64]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const [u64] kind: *const [u64]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ptr::NonNull<[u64]> kind: core::ptr::NonNull<[u64]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/4xhtejyezxbd4jjgzhdohdkp7"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `4xhtejyezxbd4jjgzhdohdkp7`
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (usize, bool) kind: (usize, bool)
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind)), args: [] }: FnDef(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind), [])) => _ZN4core9panicking14panic_nounwind17h498976f1d67cfc09E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::option::Option<usize> kind: core::option::Option<usize>
  ). Expected <2 x i64> for param 0, got i128; injecting bitcast
  }
    ret <2 x i64> %10, !dbg !63
    %10 = bitcast i128 %9 to <2 x i64>, !dbg !63
    %9 = load i128, i128* %8, align 16, !dbg !62
    %8 = bitcast i8* %2 to i128*, !dbg !62
    store <2 x i64> zeroinitializer, <2 x i64>* %7, align 16, !dbg !62
    %7 = bitcast i8* %2 to <2 x i64>*, !dbg !62
    call void @llvm.trap(), !dbg !62
    call void @llvm.dbg.declare(metadata i8* %4, metadata !60, metadata !DIExpression()), !dbg !61
    store i128 %5, i128* %6, align 16
    %6 = bitcast i8* %4 to i128*
    %5 = bitcast <2 x i64> %0 to i128
    %4 = bitcast [16 x i8]* %3 to i8*
    %3 = alloca [16 x i8], align 16
    %2 = bitcast [16 x i8]* %1 to i8*
    %1 = alloca [16 x i8], align 16
  start:
  define internal <2 x i64> @"_ZN4core3num22_$LT$impl$u20$u128$GT$10swap_bytes17h028185e165d82fd3E"(<2 x i64>) unnamed_addr #0 !dbg !54 {
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected <2 x i64> for param 1, got i128; injecting bitcast
  declare internal void @"_ZN4core3num22_$LT$impl$u20$u128$GT$11to_ne_bytes17he08f5b9842304a31E"([16 x i8]* noalias nocapture sret align 1 dereferenceable(16), <2 x i64>) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected <2 x i64> for param 0, got i128; injecting bitcast
  declare internal <2 x i64> @"_ZN4core3num22_$LT$impl$u20$u128$GT$5to_be17hff639167ab93f112E"(<2 x i64>) unnamed_addr #0
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 16_usize] kind: [u8; 16_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u128 kind: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 8_usize] kind: [u8; 8_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: bool kind: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/7y27lj97rzq7s2urjg5gelrzc"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `7y27lj97rzq7s2urjg5gelrzc`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind)), args: [] }: FnDef(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind), [])) => _ZN4core9panicking14panic_nounwind17h498976f1d67cfc09E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2957 ~ core[aa73]::ub_checks::maybe_is_aligned_and_not_null)), args: [] }: FnDef(DefId(1:2957 ~ core[aa73]::ub_checks::maybe_is_aligned_and_not_null), [])) => _ZN4core9ub_checks29maybe_is_aligned_and_not_null17h0351eeddf57b6bf9E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: bool kind: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const () kind: *const ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/3f70ei74prm1nkfnofl7ghfdr"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `3f70ei74prm1nkfnofl7ghfdr`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut)), args: ['{erased}, u8] }: FnDef(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut), ['{erased}, u8])) => _ZN4core5slice3raw18from_raw_parts_mut17h0b15c6eeb412adb8E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/lib.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/lib.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::InvalidOutputSize kind: sha2::digest::InvalidOutputSize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::result::Result<sha2::Sha512VarCore, sha2::digest::InvalidOutputSize> kind: core::result::Result<sha2::Sha512VarCore, sha2::digest::InvalidOutputSize>
  ). Expected [0 x i8]* for param 2, got i8*; injecting bitcast
  declare void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h09738660dc2f8a29E"([0 x i8]* nonnull align 1, i64, [0 x i8]* nonnull align 1, i64, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13737 ~ core[aa73]::slice::{impl#0}::copy_from_slice)), args: [u8] }: FnDef(DefId(1:13737 ~ core[aa73]::slice::{impl#0}::copy_from_slice), [u8])) => _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h09738660dc2f8a29E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:24934 ~ core[aa73]::num::{impl#9}::to_be_bytes)), args: [] }: FnDef(DefId(1:24934 ~ core[aa73]::num::{impl#9}::to_be_bytes), [])) => _ZN4core3num21_$LT$impl$u20$u64$GT$11to_be_bytes17h3cc168cee31b2081E
  ). Expected { { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* for param 1, got i8*; injecting bitcast
  declare void @"_ZN102_$LT$core$$iter$$adapters$$zip$$Zip$LT$A$C$B$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4next17h77b2a500ab058d9bE"({ {}*, [2 x i64] }* noalias nocapture sret align 8 dereferenceable(24), { { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { {}*, [2 x i64] }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN102_$LT$core$$iter$$adapters$$zip$$Zip$LT$A$C$B$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4next17h77b2a500ab058d9bE"({ {}*, [2 x i64] }* noalias nocapture sret align 8 dereferenceable(24), { { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:8317 ~ core[aa73]::iter::adapters::zip::{impl#1}::next)), args: [core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>] }: FnDef(DefId(1:8317 ~ core[aa73]::iter::adapters::zip::{impl#1}::next), [core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>])) => _ZN102_$LT$core$$iter$$adapters$$zip$$Zip$LT$A$C$B$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4next17h77b2a500ab058d9bE
  ). Expected { { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* for param 1, got i8*; injecting bitcast
  declare void @"_ZN63_$LT$I$u20$as$u20$core$$iter$$traits$$collect$$IntoIterator$GT$9into_iter17h1e75c880fabf667cE"({ { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* noalias nocapture sret align 8 dereferenceable(80), { { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* noalias nocapture align 8 dereferenceable(80)) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN63_$LT$I$u20$as$u20$core$$iter$$traits$$collect$$IntoIterator$GT$9into_iter17h1e75c880fabf667cE"({ { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* noalias nocapture sret align 8 dereferenceable(80), { { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* noalias nocapture align 8 dereferenceable(80)) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:9019 ~ core[aa73]::iter::traits::collect::{impl#0}::into_iter)), args: [core::iter::Zip<core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>>] }: FnDef(DefId(1:9019 ~ core[aa73]::iter::traits::collect::{impl#0}::into_iter), [core::iter::Zip<core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>>])) => _ZN63_$LT$I$u20$as$u20$core$$iter$$traits$$collect$$IntoIterator$GT$9into_iter17h1e75c880fabf667cE
  ). Expected { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }* for param 1, got i8*; injecting bitcast
  declare void @_ZN4core4iter6traits8iterator8Iterator3zip17h29491d42af9f9e1bE({ { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* noalias nocapture sret align 8 dereferenceable(80), { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }* noalias nocapture align 8 dereferenceable(40), i8* nonnull, i8*) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core4iter6traits8iterator8Iterator3zip17h29491d42af9f9e1bE({ { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }, { i8*, i8* }, i64, i64, i64 }* noalias nocapture sret align 8 dereferenceable(80), { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }* noalias nocapture align 8 dereferenceable(40), i8* nonnull, i8*) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:9161 ~ core[aa73]::iter::traits::iterator::Iterator::zip)), args: [core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>] }: FnDef(DefId(1:9161 ~ core[aa73]::iter::traits::iterator::Iterator::zip), [core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>])) => _ZN4core4iter6traits8iterator8Iterator3zip17h29491d42af9f9e1bE
  ). Expected [0 x i64]* for param 0, got { [8 x i64], i128 }*; injecting bitcast
  declare { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hffcb055fac345fcdE"([0 x i64]* nonnull align 8, i64) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13621 ~ core[aa73]::slice::{impl#0}::iter)), args: [u64] }: FnDef(DefId(1:13621 ~ core[aa73]::slice::{impl#0}::iter), [u64])) => _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hffcb055fac345fcdE
  ). Expected { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16chunks_exact_mut17h8b4674d143cef990E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }* noalias nocapture sret align 8 dereferenceable(40), [0 x i8]* nonnull align 1, i64, i64, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13627 ~ core[aa73]::slice::{impl#0}::chunks_exact_mut)), args: [u8] }: FnDef(DefId(1:13627 ~ core[aa73]::slice::{impl#0}::chunks_exact_mut), [u8])) => _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16chunks_exact_mut17h8b4674d143cef990E
  ). Expected i64* for param 2, got i8*; injecting bitcast
  declare void @"_ZN12block_buffer50BlockBuffer$LT$BlockSize$C$block_buffer$$Eager$GT$17len128_padding_be17hc023e3ca43266f73E"({ { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1, <2 x i64>, i64* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected <2 x i64> for param 1, got i128; injecting bitcast
  declare void @"_ZN12block_buffer50BlockBuffer$LT$BlockSize$C$block_buffer$$Eager$GT$17len128_padding_be17hc023e3ca43266f73E"({ { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1, <2 x i64>, i64* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(10:78 ~ block_buffer[1603]::{impl#6}::len128_padding_be)), args: [sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(5:75 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core::{closure#0}), [i16, Binder { value: extern "RustCall" fn((&'^0 sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>,)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::Sha512VarCore,)])] }: FnDef(DefId(10:78 ~ block_buffer[1603]::{impl#6}::len128_padding_be), [sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(5:75 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core::{closure#0}), [i16, Binder { value: extern "RustCall" fn((&'^0 sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>,)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::Sha512VarCore,)])])) => _ZN12block_buffer50BlockBuffer$LT$BlockSize$C$block_buffer$$Eager$GT$17len128_padding_be17hc023e3ca43266f73E
  ). Expected <2 x i64> for param 1, got i128; injecting bitcast
  declare { <2 x i64>, i1 } @__nvvm_u128_mulo(<2 x i64>, <2 x i64>)
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected <2 x i64> for param 0, got i128; injecting bitcast
  declare { <2 x i64>, i1 } @__nvvm_u128_mulo(<2 x i64>, <2 x i64>)
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected <2 x i64> for param 1, got i128; injecting bitcast
  declare { <2 x i64>, i1 } @__nvvm_u128_addo(<2 x i64>, <2 x i64>)
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected <2 x i64> for param 0, got i128; injecting bitcast
  declare { <2 x i64>, i1 } @__nvvm_u128_addo(<2 x i64>, <2 x i64>)
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38841 ~ core[aa73]::panicking::panic_const::panic_const_mul_overflow)), args: [] }: FnDef(DefId(1:38841 ~ core[aa73]::panicking::panic_const::panic_const_mul_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_mul_overflow17h3bf17d19f8fc5e92E
  ). Expected <2 x i64> for param 1, got i128; injecting bitcast
  declare { <2 x i64>, i1 } @__nvvm_u128_mulo(<2 x i64>, <2 x i64>)
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected <2 x i64> for param 0, got i128; injecting bitcast
  declare { <2 x i64>, i1 } @__nvvm_u128_mulo(<2 x i64>, <2 x i64>)
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} u64 kind: &'{erased} u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} u64> kind: core::marker::PhantomData<&'{erased} u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const u64 kind: *const u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ptr::NonNull<u64> kind: core::ptr::NonNull<u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::Iter<'{erased}, u64> kind: core::slice::Iter<'{erased}, u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut u8 kind: &'{erased} mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} mut u8> kind: core::marker::PhantomData<&'{erased} mut u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut [u8] kind: &'{erased} mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8] kind: [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut [u8] kind: *mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::ChunksExactMut<'{erased}, u8> kind: core::slice::ChunksExactMut<'{erased}, u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::iter::Zip<core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>> kind: core::iter::Zip<core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager> kind: &'{erased} mut sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager>
  ). Expected [8 x i64]* for param 0, got { [8 x i64], i128 }*; injecting bitcast
  declare void @_ZN4sha26sha51211compress51217hb537a4820e7166c7E([8 x i64]* nonnull align 8, [0 x { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }]* nonnull align 1, i64) unnamed_addr #4
  ; Function Attrs: nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(5:91 ~ sha2[bfc0]::sha512::compress512)), args: [] }: FnDef(DefId(5:91 ~ sha2[bfc0]::sha512::compress512), [])) => _ZN4sha26sha51211compress51217hb537a4820e7166c7E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow)), args: [] }: FnDef(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_add_overflow17h6c8c98a9847b65eeE
  ). Expected <2 x i64> for param 1, got i128; injecting bitcast
  declare { <2 x i64>, i1 } @__nvvm_u128_addo(<2 x i64>, <2 x i64>)
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected <2 x i64> for param 0, got i128; injecting bitcast
  declare { <2 x i64>, i1 } @__nvvm_u128_addo(<2 x i64>, <2 x i64>)
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u128 kind: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u64; 8_usize] kind: [u64; 8_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::Sha512VarCore kind: sha2::Sha512VarCore
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::Sha512VarCore kind: &'{erased} mut sha2::Sha512VarCore
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.9/src/core_api.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.9/src/core_api.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: bool kind: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/sealed.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/sealed.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10300 ~ core[aa73]::panicking::panic)), args: [] }: FnDef(DefId(1:10300 ~ core[aa73]::panicking::panic), [])) => _ZN4core9panicking5panic17hbf79c4cbdca7ec62E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager> kind: &'{erased} sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/lib.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/lib.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::block_buffer::Eager kind: sha2::digest::block_buffer::Eager
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<sha2::digest::block_buffer::Eager> kind: core::marker::PhantomData<sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager> kind: sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/dmjg0ao5thy84atxt1tjw5ssl"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `dmjg0ao5thy84atxt1tjw5ssl`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind)), args: [] }: FnDef(DefId(1:10302 ~ core[aa73]::panicking::panic_nounwind), [])) => _ZN4core9panicking14panic_nounwind17h498976f1d67cfc09E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/8ck2eg38a27x6cis3tc4fgzwm"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `8ck2eg38a27x6cis3tc4fgzwm`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut)), args: ['{erased}, u8] }: FnDef(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut), ['{erased}, u8])) => _ZN4core5slice3raw18from_raw_parts_mut17h0b15c6eeb412adb8E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut [u8] kind: &'{erased} mut [u8]
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13445 ~ core[aa73]::slice::raw::from_raw_parts)), args: ['{erased}, u8] }: FnDef(DefId(1:13445 ~ core[aa73]::slice::raw::from_raw_parts), ['{erased}, u8])) => _ZN4core5slice3raw14from_raw_parts17h697afa14d5263f4cE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/lib.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/lib.rs"))
  ). Expected {}* for param 2, got i8*; injecting bitcast
  declare void @_ZN4core6result13unwrap_failed17h5969436e7126c895E([0 x i8]* nonnull align 1, i64, {}* nonnull align 1, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #6
  ; Function Attrs: cold inlinehint noreturn nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10758 ~ core[aa73]::result::unwrap_failed)), args: [sha2::digest::InvalidOutputSize] }: FnDef(DefId(1:10758 ~ core[aa73]::result::unwrap_failed), [sha2::digest::InvalidOutputSize])) => _ZN4core6result13unwrap_failed17h5969436e7126c895E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::InvalidOutputSize kind: sha2::digest::InvalidOutputSize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::result::Result<sha2::Sha512VarCore, sha2::digest::InvalidOutputSize> kind: core::result::Result<sha2::Sha512VarCore, sha2::digest::InvalidOutputSize>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:12450 ~ core[aa73]::slice::index::{impl#7}::index)), args: [u8] }: FnDef(DefId(1:12450 ~ core[aa73]::slice::index::{impl#7}::index), [u8])) => _ZN110_$LT$core$$ops$$range$$RangeFrom$LT$usize$GT$$u20$as$u20$core$$slice$$index$$SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h8aa108d7f4e3d533E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ops::RangeFrom<usize> kind: core::ops::RangeFrom<usize>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const [u8] kind: *const [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const u8 kind: *const u8
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(8:476 ~ generic_array[47b5]::{impl#18}::generate)), args: [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])] }: FnDef(DefId(8:476 ~ generic_array[47b5]::{impl#18}::generate), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])])) => _ZN110_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$generic_array$$sequence$$GenericSequence$LT$T$GT$$GT$8generate17h6317d56025fcaae9E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs"))
  ). Expected { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got i8*; injecting bitcast
  declare internal { [0 x i8]*, i64 } @"_ZN84_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$Deref$GT$5deref17hbda876f830bae723E"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #0
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13737 ~ core[aa73]::slice::{impl#0}::copy_from_slice)), args: [u8] }: FnDef(DefId(1:13737 ~ core[aa73]::slice::{impl#0}::copy_from_slice), [u8])) => _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h09738660dc2f8a29E
  ). Expected { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got i8*; injecting bitcast
  declare internal { [0 x i8]*, i64 } @"_ZN84_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$Deref$GT$5deref17hbda876f830bae723E"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #0
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38840 ~ core[aa73]::panicking::panic_const::panic_const_sub_overflow)), args: [] }: FnDef(DefId(1:38840 ~ core[aa73]::panicking::panic_const::panic_const_sub_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_sub_overflow17hcf4077fe47f7718aE
  ). Expected { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got i8*; injecting bitcast
  declare internal { [0 x i8]*, i64 } @"_ZN84_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$Deref$GT$5deref17hbda876f830bae723E"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #0
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 2, got i8*; injecting bitcast
  declare hidden void @"_ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$22finalize_variable_core17h6d98ba6081953dbdE"({ [8 x i64], i128 }* nonnull align 16, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1, { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { [8 x i64], i128 }* for param 0, got { { [8 x i64], i128 }, {} }*; injecting bitcast
  declare hidden void @"_ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$22finalize_variable_core17h6d98ba6081953dbdE"({ [8 x i64], i128 }* nonnull align 16, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1, { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(5:74 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core)), args: [] }: FnDef(DefId(5:74 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core), [])) => _ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$22finalize_variable_core17h6d98ba6081953dbdE
  ). Expected { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got i8*; injecting bitcast
  declare internal void @"_ZN13generic_array5impls93_$LT$impl$u20$core$$default$$Default$u20$for$u20$generic_array$$GenericArray$LT$T$C$N$GT$$GT$7default17hdc75b4acbfde565eE"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(64)) unnamed_addr #0
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::block_buffer::Eager kind: sha2::digest::block_buffer::Eager
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<sha2::digest::block_buffer::Eager> kind: core::marker::PhantomData<sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager> kind: sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager> kind: &'{erased} mut sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager>
  ). Expected { [8 x i64], i128 }* for param 0, got { { [8 x i64], i128 }, {} }*; injecting bitcast
  declare hidden void @"_ZN78_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$UpdateCore$GT$13update_blocks17h0e832095fd742caeE"({ [8 x i64], i128 }* nonnull align 16, [0 x { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }]* nonnull align 1, i64) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(5:68 ~ sha2[bfc0]::core_api::{impl#11}::update_blocks)), args: [] }: FnDef(DefId(5:68 ~ sha2[bfc0]::core_api::{impl#11}::update_blocks), [])) => _ZN78_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$UpdateCore$GT$13update_blocks17h0e832095fd742caeE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512> kind: &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>
  ). Expected { i128, [10 x i64] }* for param 1, got i8*; injecting bitcast
  declare internal void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf1b3468d4b6eb8faE"({ [8 x i64], i128 }* noalias nocapture sret align 16 dereferenceable(80), { i128, [10 x i64] }* noalias nocapture align 16 dereferenceable(96), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { [8 x i64], i128 }* for param 0, got i8*; injecting bitcast
  declare internal void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf1b3468d4b6eb8faE"({ [8 x i64], i128 }* noalias nocapture sret align 16 dereferenceable(80), { i128, [10 x i64] }* noalias nocapture align 16 dereferenceable(96), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { i128, [10 x i64] }* for param 0, got i8*; injecting bitcast
  declare hidden void @"_ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$3new17h608d123462d8d5f9E"({ i128, [10 x i64] }* noalias nocapture sret align 16 dereferenceable(96), i64) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(5:73 ~ sha2[bfc0]::core_api::{impl#13}::new)), args: [] }: FnDef(DefId(5:73 ~ sha2[bfc0]::core_api::{impl#13}::new), [])) => _ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$3new17h608d123462d8d5f9E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::OidSha512 kind: sha2::OidSha512
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512) kind: (sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<(sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)> kind: core::marker::PhantomData<(sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u128 kind: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u64; 8_usize] kind: [u64; 8_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::Sha512VarCore kind: sha2::Sha512VarCore
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512> kind: sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/core_api/ct_variable.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/core_api/ct_variable.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ops::RangeTo<usize> kind: core::ops::RangeTo<usize>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:12361 ~ core[aa73]::slice::index::slice_index_order_fail)), args: [] }: FnDef(DefId(1:12361 ~ core[aa73]::slice::index::slice_index_order_fail), [])) => _ZN4core5slice5index22slice_index_order_fail17ha8cc0d853136454eE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:12360 ~ core[aa73]::slice::index::slice_end_index_len_fail)), args: [] }: FnDef(DefId(1:12360 ~ core[aa73]::slice::index::slice_end_index_len_fail), [])) => _ZN4core5slice5index24slice_end_index_len_fail17hc26cbc83f8b57667E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:25115 ~ core[aa73]::num::{impl#11}::checked_sub)), args: [] }: FnDef(DefId(1:25115 ~ core[aa73]::num::{impl#11}::checked_sub), [])) => _ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h0074da5171fea6daE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: str kind: str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} str kind: &'{erased} str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::panic::Location<'{erased}> kind: core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::panic::Location<'{erased}> kind: &'{erased} core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ops::Range<usize> kind: core::ops::Range<usize>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8] kind: [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [u8] kind: &'{erased} [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/index.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/index.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/4sglfoo2vnlqcb1aq3csz29wb"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `4sglfoo2vnlqcb1aq3csz29wb`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38841 ~ core[aa73]::panicking::panic_const::panic_const_mul_overflow)), args: [] }: FnDef(DefId(1:38841 ~ core[aa73]::panicking::panic_const::panic_const_mul_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_mul_overflow17h3bf17d19f8fc5e92E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: str kind: str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} str kind: &'{erased} str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::panic::Location<'{erased}> kind: core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::panic::Location<'{erased}> kind: &'{erased} core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/czcf7inva6bqfhgrnxj15xfra"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `czcf7inva6bqfhgrnxj15xfra`
  ). Expected [64 x i8]* for param 0, got i8*; injecting bitcast
  declare { [0 x i8]*, i64 } @"_ZN4core5array88_$LT$impl$u20$core$$ops$$index$$IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17hfae6d037ea0332eeE"([64 x i8]* nonnull align 1, i64, i64, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #5
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:4667 ~ core[aa73]::array::{impl#16}::index_mut)), args: [u8, core::ops::Range<usize>, 64_usize] }: FnDef(DefId(1:4667 ~ core[aa73]::array::{impl#16}::index_mut), [u8, core::ops::Range<usize>, 64_usize])) => _ZN4core5array88_$LT$impl$u20$core$$ops$$index$$IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17hfae6d037ea0332eeE
  ). Expected [0 x i8]* for param 1, got [3 x i8]*; injecting bitcast
  }
    ret void, !dbg !291
    call void @"_ZN50_$LT$T$u20$as$u20$core$$convert$$Into$LT$U$GT$$GT$4into17h80194ec400694e9bE"([64 x i8]* noalias nocapture align 1 dereferenceable(64) %0, { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture align 1 dereferenceable(64) %18, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$9" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !290
    %18 = bitcast i8* %8 to { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !290
    call void @"_ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$8finalize17hc6f5ca86e053d0dbE"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture align 1 dereferenceable(64) %16, { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* noalias nocapture align 16 dereferenceable(224) %17), !dbg !290
    %17 = bitcast i8* %6 to { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }*, !dbg !290
    %16 = bitcast i8* %8 to { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !290
    call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 16 %10, i64 224, i1 false), !dbg !290
    call void @"_ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$6update17h3d492e01fbb9d052E"({ { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* nonnull align 16 %15, [0 x i8]* nonnull align 1 %1, i64 %2), !dbg !289
    %15 = bitcast i8* %10 to { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }*, !dbg !289
    call void @"_ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$3new17h6314cf09443f5af6E"({ { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* noalias nocapture align 16 dereferenceable(224) %14), !dbg !288
    %14 = bitcast i8* %10 to { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }*, !dbg !288
    call void @llvm.dbg.declare(metadata i8* %10, metadata !109, metadata !DIExpression()), !dbg !287
    call void @llvm.dbg.declare(metadata i8* %4, metadata !107, metadata !DIExpression()), !dbg !108
    store i64 %2, i64* %13, align 8
    %13 = bitcast i8* %12 to i64*
    %12 = getelementptr inbounds i8, i8* %4, i64 8
    store [0 x i8]* %1, [0 x i8]** %11, align 8
    %11 = bitcast i8* %4 to [0 x i8]**
    %10 = bitcast [224 x i8]* %9 to i8*
    %9 = alloca [224 x i8], align 16
    %8 = bitcast [64 x i8]* %7 to i8*
    %7 = alloca [64 x i8], align 1
    %6 = bitcast [224 x i8]* %5 to i8*
    %5 = alloca [224 x i8], align 16
    %4 = bitcast [16 x i8]* %3 to i8*
    %3 = alloca [16 x i8], align 8
  start:
  define internal void @_ZN6kernel11sha512_hash17h0a3777e023b0e491E([64 x i8]* noalias nocapture sret align 1 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1 !dbg !91 {
  ; Function Attrs: nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected [64 x i8]* for param 0, got i8*; injecting bitcast
  }
    ret void, !dbg !291
    call void @"_ZN50_$LT$T$u20$as$u20$core$$convert$$Into$LT$U$GT$$GT$4into17h80194ec400694e9bE"([64 x i8]* noalias nocapture align 1 dereferenceable(64) %0, { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture align 1 dereferenceable(64) %18, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$9" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !290
    %18 = bitcast i8* %8 to { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !290
    call void @"_ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$8finalize17hc6f5ca86e053d0dbE"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture align 1 dereferenceable(64) %16, { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* noalias nocapture align 16 dereferenceable(224) %17), !dbg !290
    %17 = bitcast i8* %6 to { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }*, !dbg !290
    %16 = bitcast i8* %8 to { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !290
    call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 16 %10, i64 224, i1 false), !dbg !290
    call void @"_ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$6update17h3d492e01fbb9d052E"({ { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* nonnull align 16 %15, [0 x i8]* nonnull align 1 %1, i64 %2), !dbg !289
    %15 = bitcast i8* %10 to { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }*, !dbg !289
    call void @"_ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$3new17h6314cf09443f5af6E"({ { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* noalias nocapture align 16 dereferenceable(224) %14), !dbg !288
    %14 = bitcast i8* %10 to { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }*, !dbg !288
    call void @llvm.dbg.declare(metadata i8* %10, metadata !109, metadata !DIExpression()), !dbg !287
    call void @llvm.dbg.declare(metadata i8* %4, metadata !107, metadata !DIExpression()), !dbg !108
    store i64 %2, i64* %13, align 8
    %13 = bitcast i8* %12 to i64*
    %12 = getelementptr inbounds i8, i8* %4, i64 8
    store [0 x i8]* %1, [0 x i8]** %11, align 8
    %11 = bitcast i8* %4 to [0 x i8]**
    %10 = bitcast [224 x i8]* %9 to i8*
    %9 = alloca [224 x i8], align 16
    %8 = bitcast [64 x i8]* %7 to i8*
    %7 = alloca [64 x i8], align 1
    %6 = bitcast [224 x i8]* %5 to i8*
    %5 = alloca [224 x i8], align 16
    %4 = bitcast [16 x i8]* %3 to i8*
    %3 = alloca [16 x i8], align 8
  start:
  define internal void @_ZN6kernel11sha512_hash17h0a3777e023b0e491E([64 x i8]* noalias nocapture sret align 1 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1 !dbg !91 {
  ; Function Attrs: nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy)), args: [*const u8] }: FnDef(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy), [*const u8])) => _ZN6kernel23find_vanity_private_key31assert_kernel_parameter_is_copy17hcc6f28ef07a95c04E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy)), args: [usize] }: FnDef(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy), [usize])) => _ZN6kernel23find_vanity_private_key31assert_kernel_parameter_is_copy17h06489c95ecc6e901E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy)), args: [u64] }: FnDef(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy), [u64])) => _ZN6kernel23find_vanity_private_key31assert_kernel_parameter_is_copy17h3bd746bbcdd4092dE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy)), args: [*mut cuda_std::atomic::AtomicF32] }: FnDef(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy), [*mut cuda_std::atomic::AtomicF32])) => _ZN6kernel23find_vanity_private_key31assert_kernel_parameter_is_copy17he4fe7fae8182305dE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy)), args: [*mut u8] }: FnDef(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy), [*mut u8])) => _ZN6kernel23find_vanity_private_key31assert_kernel_parameter_is_copy17h184026d840271595E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy)), args: [*mut u32] }: FnDef(DefId(0:10 ~ kernel[279d]::find_vanity_private_key::assert_kernel_parameter_is_copy), [*mut u32])) => _ZN6kernel23find_vanity_private_key31assert_kernel_parameter_is_copy17had40458d289b77b9E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut [u8] kind: &'{erased} mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut u32 kind: *mut u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut u8 kind: *mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: f32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: f32 kind: f32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::cell::UnsafeCell<f32> kind: core::cell::UnsafeCell<f32>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: cuda_std::atomic::AtomicF32 kind: cuda_std::atomic::AtomicF32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut cuda_std::atomic::AtomicF32 kind: *mut cuda_std::atomic::AtomicF32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const u8 kind: *const u8
  ). Expected { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 1, got i8*; injecting bitcast
  declare void @"_ZN50_$LT$T$u20$as$u20$core$$convert$$Into$LT$U$GT$$GT$4into17h80194ec400694e9bE"([64 x i8]* noalias nocapture sret align 1 dereferenceable(64), { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture align 1 dereferenceable(64), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #5
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:3284 ~ core[aa73]::convert::{impl#3}::into)), args: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>, [u8; 64_usize]] }: FnDef(DefId(1:3284 ~ core[aa73]::convert::{impl#3}::into), [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>, [u8; 64_usize]])) => _ZN50_$LT$T$u20$as$u20$core$$convert$$Into$LT$U$GT$$GT$4into17h80194ec400694e9bE
  ). Expected { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* for param 1, got i8*; injecting bitcast
  declare void @"_ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$8finalize17hc6f5ca86e053d0dbE"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(64), { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* noalias nocapture align 16 dereferenceable(224)) unnamed_addr #5
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$8finalize17hc6f5ca86e053d0dbE"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(64), { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* noalias nocapture align 16 dereferenceable(224)) unnamed_addr #5
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(6:304 ~ digest[a657]::digest::{impl#0}::finalize)), args: [sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>>] }: FnDef(DefId(6:304 ~ digest[a657]::digest::{impl#0}::finalize), [sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>>])) => _ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$8finalize17hc6f5ca86e053d0dbE
  ). Expected { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$6update17h3d492e01fbb9d052E"({ { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* nonnull align 16, [0 x i8]* nonnull align 1, i64) unnamed_addr #5
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(6:300 ~ digest[a657]::digest::{impl#0}::update)), args: [sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>>, &'{erased} [u8]] }: FnDef(DefId(6:300 ~ digest[a657]::digest::{impl#0}::update), [sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>>, &'{erased} [u8]])) => _ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$6update17h3d492e01fbb9d052E
  ). Expected { { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$3new17h6314cf09443f5af6E"({ { { [8 x i64], i128 }, {} }, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }, [15 x i8] }* noalias nocapture sret align 16 dereferenceable(224)) unnamed_addr #5
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(6:297 ~ digest[a657]::digest::{impl#0}::new)), args: [sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>>] }: FnDef(DefId(6:297 ~ digest[a657]::digest::{impl#0}::new), [sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>>])) => _ZN44_$LT$D$u20$as$u20$digest$$digest$$Digest$GT$3new17h6314cf09443f5af6E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::block_buffer::Eager kind: sha2::digest::block_buffer::Eager
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<sha2::digest::block_buffer::Eager> kind: core::marker::PhantomData<sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager> kind: sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::OidSha512 kind: sha2::OidSha512
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512) kind: (sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<(sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)> kind: core::marker::PhantomData<(sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u128 kind: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u64; 8_usize] kind: [u64; 8_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::Sha512VarCore kind: sha2::Sha512VarCore
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512> kind: sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>> kind: sha2::digest::core_api::CoreWrapper<sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8] kind: [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [u8] kind: &'{erased} [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 64_usize] kind: [u8; 64_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/ed25519-vanity-rs/kernel/src/lib.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("src/lib.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:535 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_idx_z)), args: [] }: FnDef(DefId(12:535 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_idx_z), [])) => __nvvm_block_idx_z
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:534 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_idx_y)), args: [] }: FnDef(DefId(12:534 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_idx_y), [])) => __nvvm_block_idx_y
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:533 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_idx_x)), args: [] }: FnDef(DefId(12:533 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_idx_x), [])) => __nvvm_block_idx_x
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:532 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_dim_z)), args: [] }: FnDef(DefId(12:532 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_dim_z), [])) => __nvvm_block_dim_z
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:531 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_dim_y)), args: [] }: FnDef(DefId(12:531 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_dim_y), [])) => __nvvm_block_dim_y
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:530 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_dim_x)), args: [] }: FnDef(DefId(12:530 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_block_dim_x), [])) => __nvvm_block_dim_x
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:538 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_grid_dim_z)), args: [] }: FnDef(DefId(12:538 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_grid_dim_z), [])) => __nvvm_grid_dim_z
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:537 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_grid_dim_y)), args: [] }: FnDef(DefId(12:537 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_grid_dim_y), [])) => __nvvm_grid_dim_y
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:536 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_grid_dim_x)), args: [] }: FnDef(DefId(12:536 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_grid_dim_x), [])) => __nvvm_grid_dim_x
  ). Expected { i32, i32, i32 }* for param 0, got i8*; injecting bitcast
  declare i32 @"_ZN3vek3vec6repr_c4vec313Vec3$LT$T$GT$7product17hb287632c841c2bf3E"({ i32, i32, i32 }* noalias nocapture align 4 dereferenceable(12)) unnamed_addr #5
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(15:1942 ~ vek[9923]::vec::repr_c::vec3::{impl#14}::product)), args: [u32] }: FnDef(DefId(15:1942 ~ vek[9923]::vec::repr_c::vec3::{impl#14}::product), [u32])) => _ZN3vek3vec6repr_c4vec313Vec3$LT$T$GT$7product17hb287632c841c2bf3E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow)), args: [] }: FnDef(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_add_overflow17h6c8c98a9847b65eeE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38841 ~ core[aa73]::panicking::panic_const::panic_const_mul_overflow)), args: [] }: FnDef(DefId(1:38841 ~ core[aa73]::panicking::panic_const::panic_const_mul_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_mul_overflow17h3bf17d19f8fc5e92E
  ). Expected { i32, i32, i32 }* for param 0, got i8*; injecting bitcast
  }
    ret void, !dbg !28
    call void @"_ZN3vek3vec6repr_c4vec313Vec3$LT$T$GT$3new17h51b0d0cb84ee9b30E"({ i32, i32, i32 }* noalias nocapture align 4 dereferenceable(12) %0, i32 %1, i32 %2, i32 %3), !dbg !27
    %3 = call i32 @__nvvm_thread_idx_z(), !dbg !26
    %2 = call i32 @__nvvm_thread_idx_y(), !dbg !25
    %1 = call i32 @__nvvm_thread_idx_x(), !dbg !24
  start:
  define internal void @_ZN8cuda_std6thread10thread_idx17h33a39c2403da60e5E({ i32, i32, i32 }* noalias nocapture sret align 4 dereferenceable(12)) unnamed_addr #0 !dbg !3 {
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { i32, i32, i32 }* for param 0, got i8*; injecting bitcast
  declare internal void @_ZN8cuda_std6thread9block_dim17h87bee18730827c56E({ i32, i32, i32 }* noalias nocapture sret align 4 dereferenceable(12)) unnamed_addr #0
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { i32, i32, i32 }* for param 0, got i8*; injecting bitcast
  declare internal void @_ZN8cuda_std6thread9block_idx17h2a2ac2c72d7f0edaE({ i32, i32, i32 }* noalias nocapture sret align 4 dereferenceable(12)) unnamed_addr #0
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { i32, i32, i32 }* for param 0, got i8*; injecting bitcast
  declare internal void @_ZN8cuda_std6thread8grid_dim17h5d11f51d62d36fc9E({ i32, i32, i32 }* noalias nocapture sret align 4 dereferenceable(12)) unnamed_addr #0
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(15:1868 ~ vek[9923]::vec::repr_c::vec3::{impl#12}::new)), args: [u32] }: FnDef(DefId(15:1868 ~ vek[9923]::vec::repr_c::vec3::{impl#12}::new), [u32])) => _ZN3vek3vec6repr_c4vec313Vec3$LT$T$GT$3new17h51b0d0cb84ee9b30E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:529 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_thread_idx_z)), args: [] }: FnDef(DefId(12:529 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_thread_idx_z), [])) => __nvvm_thread_idx_z
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:528 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_thread_idx_y)), args: [] }: FnDef(DefId(12:528 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_thread_idx_y), [])) => __nvvm_thread_idx_y
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(12:527 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_thread_idx_x)), args: [] }: FnDef(DefId(12:527 ~ cuda_std[a6bf]::thread::{extern#0}::__nvvm_thread_idx_x), [])) => __nvvm_thread_idx_x
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: cuda_std::vek::Vec3<u32> kind: cuda_std::vek::Vec3<u32>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/git/checkouts/rust-cuda-97fe623ab90e914e/4b56c81/crates/cuda_std/src/thread.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/git/checkouts/rust-cuda-97fe623ab90e914e/4b56c81/crates/cuda_std/src/thread.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/776ujmih72ixapfgijhbs9om6"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `776ujmih72ixapfgijhbs9om6`
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: *const sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: *const [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/e4o7is17o90rbikygtjae922x"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `e4o7is17o90rbikygtjae922x`
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: &'{erased} core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut)), args: ['{erased}, u8] }: FnDef(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut), ['{erased}, u8])) => _ZN4core5slice3raw18from_raw_parts_mut17h0b15c6eeb412adb8E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8] kind: [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut [u8] kind: &'{erased} mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: bool kind: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs"))
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } } }* for param 1, got i8*; injecting bitcast
  declare internal void @"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h24e85d596006d161E"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(64), { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } } }* noalias nocapture align 1 dereferenceable(64)) unnamed_addr #2
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } } }* for param 1, got i8*; injecting bitcast
  declare internal void @"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hc1ebe4b0f8b12943E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(128), { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } } }* noalias nocapture align 1 dereferenceable(128)) unnamed_addr #2
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: str kind: str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} str kind: &'{erased} str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::panic::Location<'{erased}> kind: core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::panic::Location<'{erased}> kind: &'{erased} core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: &'{erased} mut core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: *mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: &'{erased} mut core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: *mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2884 ~ core[aa73]::ptr::read)), args: [[u8; 64_usize]] }: FnDef(DefId(1:2884 ~ core[aa73]::ptr::read), [[u8; 64_usize]])) => _ZN4core3ptr4read17h0a5ce67f2ae4f698E
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } } }* for param 0, got i8*; injecting bitcast
  declare internal nonnull align 1 { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* @"_ZN91_$LT$core$$mem$$manually_drop$$ManuallyDrop$LT$T$GT$$u20$as$u20$core$$ops$$deref$$Deref$GT$5deref17h0c0ef270cd64a394E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } } }* nonnull align 1) unnamed_addr #2
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } } }* for param 0, got i8*; injecting bitcast
  declare internal void @"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h97b8b390c50edc11E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } } }* noalias nocapture sret align 1 dereferenceable(64), { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture align 1 dereferenceable(64)) unnamed_addr #2
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 64_usize] kind: [u8; 64_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs"))
  ). Expected { [64 x i8] }* for param 0, got i8*; injecting bitcast
  declare internal void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hbb32f9f5c5de2e0aE"({ [64 x i8] }* noalias nocapture sret align 1 dereferenceable(64)) unnamed_addr #2
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { [128 x i8] }* for param 0, got i8*; injecting bitcast
  declare internal void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hf3e72221ec52de9dE"({ [128 x i8] }* noalias nocapture sret align 1 dereferenceable(128)) unnamed_addr #2
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { [128 x i8] }* for param 0, got { { [128 x i8] }, i64 }*; injecting bitcast
  declare internal { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hcd0fc1eb6424712eE"({ [128 x i8] }* nonnull align 1) unnamed_addr #2
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} mut sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13622 ~ core[aa73]::slice::{impl#0}::iter_mut)), args: [u8] }: FnDef(DefId(1:13622 ~ core[aa73]::slice::{impl#0}::iter_mut), [u8])) => _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17hd9c3e814a42a350bE
  ). Expected { [64 x i8] }* for param 0, got { { [64 x i8] }, i64 }*; injecting bitcast
  declare internal { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h5760bb57702ba549E"({ [64 x i8] }* nonnull align 1) unnamed_addr #2
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} mut sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (core::slice::IterMut<'{erased}, u8>, &'{erased} mut usize) kind: (core::slice::IterMut<'{erased}, u8>, &'{erased} mut usize)
  ). Expected { [64 x i8] }* for param 1, got i8*; injecting bitcast
  declare internal void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h8c94dfe6e853d4aaE"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(64), { [64 x i8] }* noalias nocapture align 1 dereferenceable(64), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #2
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [64 x i8] }, i64 }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3mem6forget17he3c069c38dbb2f72E({ { [64 x i8] }, i64 }* noalias nocapture align 8 dereferenceable(72)) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2230 ~ core[aa73]::mem::forget)), args: [sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] }: FnDef(DefId(1:2230 ~ core[aa73]::mem::forget), [sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>])) => _ZN4core3mem6forget17he3c069c38dbb2f72E
  ). Expected { [64 x i8] }* for param 1, got { { [64 x i8] }, i64 }*; injecting bitcast
  declare void @_ZN4core3ptr4read17h7746c30a7505418bE({ [64 x i8] }* noalias nocapture sret align 1 dereferenceable(64), { [64 x i8] }*) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { [64 x i8] }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3ptr4read17h7746c30a7505418bE({ [64 x i8] }* noalias nocapture sret align 1 dereferenceable(64), { [64 x i8] }*) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2884 ~ core[aa73]::ptr::read)), args: [core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>] }: FnDef(DefId(1:2884 ~ core[aa73]::ptr::read), [core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>])) => _ZN4core3ptr4read17h7746c30a7505418bE
  ). Expected { [128 x i8] }* for param 1, got i8*; injecting bitcast
  declare internal void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h3694366695e7aa51E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(128), { [128 x i8] }* noalias nocapture align 1 dereferenceable(128), { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #2
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [128 x i8] }, i64 }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3mem6forget17h883dc37bd8e282daE({ { [128 x i8] }, i64 }* noalias nocapture align 8 dereferenceable(136)) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2230 ~ core[aa73]::mem::forget)), args: [sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] }: FnDef(DefId(1:2230 ~ core[aa73]::mem::forget), [sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>])) => _ZN4core3mem6forget17h883dc37bd8e282daE
  ). Expected { [128 x i8] }* for param 1, got { { [128 x i8] }, i64 }*; injecting bitcast
  declare void @_ZN4core3ptr4read17hfb425312c2ea53cbE({ [128 x i8] }* noalias nocapture sret align 1 dereferenceable(128), { [128 x i8] }*) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { [128 x i8] }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core3ptr4read17hfb425312c2ea53cbE({ [128 x i8] }* noalias nocapture sret align 1 dereferenceable(128), { [128 x i8] }*) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2884 ~ core[aa73]::ptr::read)), args: [core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>] }: FnDef(DefId(1:2884 ~ core[aa73]::ptr::read), [core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>])) => _ZN4core3ptr4read17hfb425312c2ea53cbE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0})), args: [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()] }: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])) => _ZN13generic_array5impls93_$LT$impl$u20$core$$default$$Default$u20$for$u20$generic_array$$GenericArray$LT$T$C$N$GT$$GT$7default28_$u7b$$u7b$closure$u7d$$u7d$17h31fbb2bd3199bc0eE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]) kind: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]) kind: &'{erased} mut Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow)), args: [] }: FnDef(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_add_overflow17h6c8c98a9847b65eeE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2888 ~ core[aa73]::ptr::write)), args: [u8] }: FnDef(DefId(1:2888 ~ core[aa73]::ptr::write), [u8])) => _ZN4core3ptr5write17hbaf7dce45fbce520E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0})), args: [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()] }: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])) => _ZN13generic_array5impls93_$LT$impl$u20$core$$default$$Default$u20$for$u20$generic_array$$GenericArray$LT$T$C$N$GT$$GT$7default28_$u7b$$u7b$closure$u7d$$u7d$17hb25b9ee69f0e5a8bE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (usize, &'{erased} mut u8) kind: (usize, &'{erased} mut u8)
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut &'{erased} mut usize kind: &'{erased} mut &'{erased} mut usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]) kind: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]) kind: &'{erased} mut Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])
  ). Expected { { [64 x i8] }, i64 }* for param 1, got i8*; injecting bitcast
  declare void @"_ZN13generic_array25ArrayBuilder$LT$T$C$N$GT$10into_inner17h31ca2a633b388623E"({ { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(64), { { [64 x i8] }, i64 }* noalias nocapture align 8 dereferenceable(72)) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { i8*, i8* }, i64 }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core4iter6traits8iterator8Iterator8for_each17h802be818a86e3bf6E({ { i8*, i8* }, i64 }* noalias nocapture align 8 dereferenceable(24), i8* nonnull align 1, i8* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:9169 ~ core[aa73]::iter::traits::iterator::Iterator::for_each)), args: [core::iter::Enumerate<core::slice::IterMut<'{erased}, u8>>, Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])] }: FnDef(DefId(1:9169 ~ core[aa73]::iter::traits::iterator::Iterator::for_each), [core::iter::Enumerate<core::slice::IterMut<'{erased}, u8>>, Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])])) => _ZN4core4iter6traits8iterator8Iterator8for_each17h802be818a86e3bf6E
  ). Expected { { i8*, i8* }, i64 }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hd267187f09d858a3E({ { i8*, i8* }, i64 }* noalias nocapture sret align 8 dereferenceable(24), i8* nonnull, i8*) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [64 x i8] }, i64 }* for param 1, got i8*; injecting bitcast
  declare void @"_ZN13generic_array25ArrayBuilder$LT$T$C$N$GT$13iter_position17h0f5fd7fcae688058E"({ { i8*, i8* }, i64* }* noalias nocapture sret align 8 dereferenceable(24), { { [64 x i8] }, i64 }* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { i8*, i8* }, i64* }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN13generic_array25ArrayBuilder$LT$T$C$N$GT$13iter_position17h0f5fd7fcae688058E"({ { i8*, i8* }, i64* }* noalias nocapture sret align 8 dereferenceable(24), { { [64 x i8] }, i64 }* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [64 x i8] }, i64 }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN13generic_array25ArrayBuilder$LT$T$C$N$GT$3new17h89d2691cc4670587E"({ { [64 x i8] }, i64 }* noalias nocapture sret align 8 dereferenceable(72)) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  ). Expected { { [128 x i8] }, i64 }* for param 1, got i8*; injecting bitcast
  declare void @"_ZN13generic_array25ArrayBuilder$LT$T$C$N$GT$10into_inner17h2196bf14e054e776E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(128), { { [128 x i8] }, i64 }* noalias nocapture align 8 dereferenceable(136)) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { i8*, i8* }, i64 }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core4iter6traits8iterator8Iterator8for_each17h58b9c975eb93a572E({ { i8*, i8* }, i64 }* noalias nocapture align 8 dereferenceable(24), i8* nonnull align 1, i8* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:9169 ~ core[aa73]::iter::traits::iterator::Iterator::for_each)), args: [core::iter::Enumerate<core::slice::IterMut<'{erased}, u8>>, Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])] }: FnDef(DefId(1:9169 ~ core[aa73]::iter::traits::iterator::Iterator::for_each), [core::iter::Enumerate<core::slice::IterMut<'{erased}, u8>>, Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])])) => _ZN4core4iter6traits8iterator8Iterator8for_each17h58b9c975eb93a572E
  ). Expected { { i8*, i8* }, i64 }* for param 0, got i8*; injecting bitcast
  declare void @_ZN4core4iter6traits8iterator8Iterator9enumerate17hd267187f09d858a3E({ { i8*, i8* }, i64 }* noalias nocapture sret align 8 dereferenceable(24), i8* nonnull, i8*) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:9181 ~ core[aa73]::iter::traits::iterator::Iterator::enumerate)), args: [core::slice::IterMut<'{erased}, u8>] }: FnDef(DefId(1:9181 ~ core[aa73]::iter::traits::iterator::Iterator::enumerate), [core::slice::IterMut<'{erased}, u8>])) => _ZN4core4iter6traits8iterator8Iterator9enumerate17hd267187f09d858a3E
  ). Expected { { [128 x i8] }, i64 }* for param 1, got i8*; injecting bitcast
  declare void @"_ZN13generic_array25ArrayBuilder$LT$T$C$N$GT$13iter_position17hb81561e807c7215dE"({ { i8*, i8* }, i64* }* noalias nocapture sret align 8 dereferenceable(24), { { [128 x i8] }, i64 }* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { i8*, i8* }, i64* }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN13generic_array25ArrayBuilder$LT$T$C$N$GT$13iter_position17hb81561e807c7215dE"({ { i8*, i8* }, i64* }* noalias nocapture sret align 8 dereferenceable(24), { { [128 x i8] }, i64 }* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [128 x i8] }, i64 }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN13generic_array25ArrayBuilder$LT$T$C$N$GT$3new17h55517fa00e55b06fE"({ { [128 x i8] }, i64 }* noalias nocapture sret align 8 dereferenceable(136)) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut usize kind: &'{erased} mut usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut u8 kind: &'{erased} mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} mut u8> kind: core::marker::PhantomData<&'{erased} mut u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut u8 kind: *mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const u8 kind: *const u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ptr::NonNull<u8> kind: core::ptr::NonNull<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::IterMut<'{erased}, u8> kind: core::slice::IterMut<'{erased}, u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::ManuallyDrop<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>> kind: core::mem::MaybeUninit<sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::ArrayBuilder<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/lib.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/lib.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/0uw24eo8kicx9czoboj40xyid"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `0uw24eo8kicx9czoboj40xyid`
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/97uin4gbb4wu7o1a9hfiz45yw"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `97uin4gbb4wu7o1a9hfiz45yw`
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got i8*; injecting bitcast
  }
    ret void, !dbg !396
    call void @"_ZN110_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$generic_array$$sequence$$GenericSequence$LT$T$GT$$GT$8generate17h4fca2eb171edc3b1E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture align 1 dereferenceable(128) %0), !dbg !395
  start:
  define internal void @"_ZN13generic_array5impls93_$LT$impl$u20$core$$default$$Default$u20$for$u20$generic_array$$GenericArray$LT$T$C$N$GT$$GT$7default17h3f21f368100e5ff6E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(128)) unnamed_addr #1 !dbg !386 {
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut)), args: ['{erased}, u8] }: FnDef(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut), ['{erased}, u8])) => _ZN4core5slice3raw18from_raw_parts_mut17h0b15c6eeb412adb8E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: &'{erased} mut sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/lib.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/lib.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: bool
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: bool kind: bool
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13445 ~ core[aa73]::slice::raw::from_raw_parts)), args: ['{erased}, u8] }: FnDef(DefId(1:13445 ~ core[aa73]::slice::raw::from_raw_parts), ['{erased}, u8])) => _ZN4core5slice3raw14from_raw_parts17h697afa14d5263f4cE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13445 ~ core[aa73]::slice::raw::from_raw_parts)), args: ['{erased}, sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] }: FnDef(DefId(1:13445 ~ core[aa73]::slice::raw::from_raw_parts), ['{erased}, sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>])) => _ZN4core5slice3raw14from_raw_parts17h0fca940bf7e3b413E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38841 ~ core[aa73]::panicking::panic_const::panic_const_mul_overflow)), args: [] }: FnDef(DefId(1:38841 ~ core[aa73]::panicking::panic_const::panic_const_mul_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_mul_overflow17h3bf17d19f8fc5e92E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: *const sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (&'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>], &'{erased} [u8]) kind: (&'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>], &'{erased} [u8])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/sealed.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/sealed.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:12451 ~ core[aa73]::slice::index::{impl#7}::index_mut)), args: [u8] }: FnDef(DefId(1:12451 ~ core[aa73]::slice::index::{impl#7}::index_mut), [u8])) => _ZN110_$LT$core$$ops$$range$$RangeFrom$LT$usize$GT$$u20$as$u20$core$$slice$$index$$SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h60ae64057931cb26E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ops::RangeFrom<usize> kind: core::ops::RangeFrom<usize>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:12442 ~ core[aa73]::slice::index::{impl#6}::index_mut)), args: [u8] }: FnDef(DefId(1:12442 ~ core[aa73]::slice::index::{impl#6}::index_mut), [u8])) => _ZN108_$LT$core$$ops$$range$$RangeTo$LT$usize$GT$$u20$as$u20$core$$slice$$index$$SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h3ae582d99b0b1ce1E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: str kind: str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} str kind: &'{erased} str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::panic::Location<'{erased}> kind: core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::panic::Location<'{erased}> kind: &'{erased} core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ops::RangeTo<usize> kind: core::ops::RangeTo<usize>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut [u8] kind: &'{erased} mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/index.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/index.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/mod.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:25801 ~ core[aa73]::ptr::const_ptr::{impl#0}::add::precondition_check)), args: [] }: FnDef(DefId(1:25801 ~ core[aa73]::ptr::const_ptr::{impl#0}::add::precondition_check), [])) => _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h27bd8ede6f159b76E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2956 ~ core[aa73]::ub_checks::check_language_ub)), args: [] }: FnDef(DefId(1:2956 ~ core[aa73]::ub_checks::check_language_ub), [])) => _ZN4core9ub_checks17check_language_ub17hfaa6a2ee487d6951E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(8:476 ~ generic_array[47b5]::{impl#18}::generate)), args: [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])] }: FnDef(DefId(8:476 ~ generic_array[47b5]::{impl#18}::generate), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])])) => _ZN110_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$generic_array$$sequence$$GenericSequence$LT$T$GT$$GT$8generate17h4fca2eb171edc3b1E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs"))
  ). Expected [0 x i8]* for param 2, got i8*; injecting bitcast
  }
    unreachable, !dbg !336
  bb12:                                             ; No predecessors!

    ret void, !dbg !372
    call void @"_ZN12block_buffer35BlockBuffer$LT$BlockSize$C$Kind$GT$17set_pos_unchecked17h6f819554041fedf7E"({ { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1 %0, i64 0), !dbg !371
  bb31:                                             ; preds = %bb20, %bb27

    br label %bb31, !dbg !370
    call void @"_ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$22finalize_variable_core28_$u7b$$u7b$closure$u7d$$u7d$17h14eb0bc099433765E"(i64** nonnull align 8 %101, { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1 %100), !dbg !369
    %101 = bitcast i8* %24 to i64**, !dbg !369
    %100 = bitcast i8* %18 to { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !369
    call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h09738660dc2f8a29E"([0 x i8]* nonnull align 1 %98, i64 %99, [0 x i8]* nonnull align 1 %2, i64 %3, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$n" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !367
    %99 = extractvalue { [0 x i8]*, i64 } %97, 1, !dbg !368
    %98 = extractvalue { [0 x i8]*, i64 } %97, 0, !dbg !368
    %97 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core$$ops$$index$$IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17ha17c9a8fba233e0cE"([0 x i8]* nonnull align 1 %95, i64 %96, i64 %67, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$m" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !368
    %96 = extractvalue { [0 x i8]*, i64 } %94, 1, !dbg !367
    %95 = extractvalue { [0 x i8]*, i64 } %94, 0, !dbg !367
    %94 = call { [0 x i8]*, i64 } @"_ZN87_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$DerefMut$GT$9deref_mut17h6c39e7824cf5e2e2E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1 %93), !dbg !367
    %93 = bitcast i8* %18 to { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !367
    call void @"_ZN13generic_array5impls93_$LT$impl$u20$core$$default$$Default$u20$for$u20$generic_array$$GenericArray$LT$T$C$N$GT$$GT$7default17h3f21f368100e5ff6E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture align 1 dereferenceable(128) %92), !dbg !366
    %92 = bitcast i8* %18 to { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !366
    call void @"_ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$22finalize_variable_core28_$u7b$$u7b$closure$u7d$$u7d$17h14eb0bc099433765E"(i64** nonnull align 8 %91, { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1 %90), !dbg !365
    %91 = bitcast i8* %24 to i64**, !dbg !365
    %90 = bitcast { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* %0 to { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !365
  bb20:                                             ; preds = %bb19

    br label %bb31, !dbg !364
    call void @"_ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$22finalize_variable_core28_$u7b$$u7b$closure$u7d$$u7d$17h14eb0bc099433765E"(i64** nonnull align 8 %89, { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1 %88), !dbg !364
    %89 = bitcast i8* %24 to i64**, !dbg !364
    %88 = bitcast { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* %0 to { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !364
    call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h09738660dc2f8a29E"([0 x i8]* nonnull align 1 %86, i64 %87, [0 x i8]* nonnull align 1 %2, i64 %3, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$l" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !362
    %87 = extractvalue { [0 x i8]*, i64 } %85, 1, !dbg !363
    %86 = extractvalue { [0 x i8]*, i64 } %85, 0, !dbg !363
    %85 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core$$ops$$index$$IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17ha17c9a8fba233e0cE"([0 x i8]* nonnull align 1 %83, i64 %84, i64 %67, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$k" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !363
    %84 = extractvalue { [0 x i8]*, i64 } %82, 1, !dbg !362
    %83 = extractvalue { [0 x i8]*, i64 } %82, 0, !dbg !362
    %82 = call { [0 x i8]*, i64 } @"_ZN87_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$DerefMut$GT$9deref_mut17h6c39e7824cf5e2e2E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1 %81), !dbg !362
    %81 = bitcast { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* %0 to { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !362
  bb27:                                             ; preds = %bb19

    unreachable, !dbg !361
    call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17hcf4077fe47f7718aE({ { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$j" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !361
  panic4:                                           ; preds = %bb18

    br i1 %80, label %bb20, label %bb27, !dbg !361
    %80 = icmp ult i64 %78, %3, !dbg !361
  bb19:                                             ; preds = %bb18

    unreachable, !dbg !361
    call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17hcf4077fe47f7718aE({ { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$j" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !361
  panic3:                                           ; preds = %bb16

    br i1 %79, label %panic4, label %bb19, !dbg !361
    %79 = extractvalue { i64, i1 } %77, 1, !dbg !361
    %78 = extractvalue { i64, i1 } %77, 0, !dbg !361
    %77 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %75, i64 1), !dbg !361
  bb18:                                             ; preds = %bb16

    unreachable, !dbg !353
    call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17hcf4077fe47f7718aE({ { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$i" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !353
  panic2:                                           ; preds = %bb14

    br i1 %76, label %panic3, label %bb18, !dbg !361
    %76 = extractvalue { i64, i1 } %74, 1, !dbg !361
    %75 = extractvalue { i64, i1 } %74, 0, !dbg !361
    %74 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %73, i64 %31), !dbg !361
    %73 = call i64 @"_ZN12block_buffer35BlockBuffer$LT$BlockSize$C$Kind$GT$4size17hfb04b588b114df94E"({ { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1 %0), !dbg !361
    call void @llvm.dbg.declare(metadata i8* %8, metadata !359, metadata !DIExpression()), !dbg !360
    store i64 %67, i64* %72, align 8, !dbg !353
    %72 = bitcast i8* %8 to i64*, !dbg !353
  bb16:                                             ; preds = %bb14

    br label %bb10, !dbg !352
    store i8 0, i8* %70, align 1, !dbg !358
    call void @llvm.dbg.declare(metadata i8* %6, metadata !355, metadata !DIExpression()), !dbg !357
    store i8* %70, i8** %71, align 8, !dbg !354
    %71 = bitcast i8* %6 to i8**, !dbg !354
    %70 = load i8*, i8** %69, align 8, !dbg !354
    %69 = bitcast i8* %20 to i8**, !dbg !354
  bb13:                                             ; preds = %bb10

    br i1 %68, label %panic2, label %bb16, !dbg !353
    %68 = extractvalue { i64, i1 } %66, 1, !dbg !353
    %67 = extractvalue { i64, i1 } %66, 0, !dbg !353
    %66 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %65, i64 %3), !dbg !353
    %65 = call i64 @"_ZN12block_buffer35BlockBuffer$LT$BlockSize$C$Kind$GT$4size17hfb04b588b114df94E"({ { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1 %0), !dbg !353
  bb14:                                             ; preds = %bb10

    br i1 %64, label %bb14, label %bb13, !dbg !336
    %64 = icmp eq i64 %63, 0, !dbg !336
    %63 = select i1 %62, i64 0, i64 1, !dbg !336
    %62 = icmp eq i64 %61, 0, !dbg !336
    %61 = ptrtoint {}* %60 to i64, !dbg !336
    %60 = load {}*, {}** %59, align 8, !dbg !336
    %59 = bitcast i8* %20 to {}**, !dbg !336
    store i8* %57, i8** %58, align 8, !dbg !336
    %58 = bitcast i8* %20 to i8**, !dbg !336
    %57 = call align 1 i8* @"_ZN94_$LT$core$$slice$$iter$$IterMut$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4next17h3f5b2dc028934538E"({ i8*, i8* }* nonnull align 8 %56), !dbg !336
    %56 = bitcast i8* %22 to { i8*, i8* }*, !dbg !336
  bb10:                                             ; preds = %bb13, %bb7

    unreachable, !dbg !349
    call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6c8c98a9847b65eeE({ { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$g" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !349
  panic1:                                           ; preds = %bb5

    br label %bb10, !dbg !352
    store i8* %52, i8** %55, align 8, !dbg !351
    %55 = bitcast i8* %54 to i8**, !dbg !351
    %54 = getelementptr inbounds i8, i8* %22, i64 8, !dbg !351
    store i8* %51, i8** %53, align 8, !dbg !351
    %53 = bitcast i8* %22 to i8**, !dbg !351
    %52 = extractvalue { i8*, i8* } %50, 1, !dbg !351
    %51 = extractvalue { i8*, i8* } %50, 0, !dbg !351
    %50 = call { i8*, i8* } @"_ZN4core5slice4iter95_$LT$impl$u20$core$$iter$$traits$$collect$$IntoIterator$u20$for$u20$$RF$mut$u20$$u5b$T$u5d$$GT$9into_iter17hbf854efe9dc55f91E"([0 x i8]* nonnull align 1 %48, i64 %49), !dbg !351
    %49 = extractvalue { [0 x i8]*, i64 } %47, 1, !dbg !350
    %48 = extractvalue { [0 x i8]*, i64 } %47, 0, !dbg !350
    %47 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core$$ops$$index$$IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17ha17c9a8fba233e0cE"([0 x i8]* nonnull align 1 %42, i64 %43, i64 %45, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$h" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !350
  bb7:                                              ; preds = %bb5

    unreachable, !dbg !346
    call void @_ZN4core9panicking18panic_bounds_check17h72883f1f17f18002E(i64 %31, i64 %36, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$f" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !346
  panic:                                            ; preds = %bb2

    br i1 %46, label %panic1, label %bb7, !dbg !349
    %46 = extractvalue { i64, i1 } %44, 1, !dbg !349
    %45 = extractvalue { i64, i1 } %44, 0, !dbg !349
    %44 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %31, i64 1), !dbg !349
    %43 = extractvalue { [0 x i8]*, i64 } %41, 1, !dbg !348
    %42 = extractvalue { [0 x i8]*, i64 } %41, 0, !dbg !348
    %41 = call { [0 x i8]*, i64 } @"_ZN87_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$DerefMut$GT$9deref_mut17h6c39e7824cf5e2e2E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1 %40), !dbg !348
    %40 = bitcast { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* %0 to { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !348
    store i8 %1, i8* %39, align 1, !dbg !346
    %39 = getelementptr inbounds i8, i8* %38, i64 %31, !dbg !346
    %38 = bitcast [0 x i8]* %35 to i8*, !dbg !346
  bb5:                                              ; preds = %bb2

    unreachable, !dbg !347
    call void @_ZN4core9panicking5panic17hbf79c4cbdca7ec62E([0 x i8]* nonnull align 1 bitcast (<{ [18 x i8] }>* @"private$o" to [0 x i8]*), i64 18, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$p" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !347
  bb1:                                              ; preds = %start

    br i1 %37, label %bb5, label %panic, !dbg !346
    %37 = icmp ult i64 %31, %36, !dbg !346
    %36 = extractvalue { [0 x i8]*, i64 } %34, 1, !dbg !346
    %35 = extractvalue { [0 x i8]*, i64 } %34, 0, !dbg !346
    %34 = call { [0 x i8]*, i64 } @"_ZN87_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$DerefMut$GT$9deref_mut17h6c39e7824cf5e2e2E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1 %33), !dbg !346
    %33 = bitcast { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* %0 to { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }*, !dbg !346
    call void @llvm.dbg.declare(metadata i8* %10, metadata !344, metadata !DIExpression()), !dbg !345
    store i64 %31, i64* %32, align 8, !dbg !343
    %32 = bitcast i8* %10 to i64*, !dbg !343
    %31 = call i64 @"_ZN12block_buffer35BlockBuffer$LT$BlockSize$C$Kind$GT$7get_pos17ha160dc1c1f04fee5E"({ { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1 %0), !dbg !343
  bb2:                                              ; preds = %start

    br i1 %30, label %bb1, label %bb2, !dbg !342
    %30 = icmp ugt i64 %3, 128, !dbg !342
    call void @llvm.dbg.declare(metadata i8* %18, metadata !337, metadata !DIExpression()), !dbg !341
    call void @llvm.dbg.declare(metadata i8* %22, metadata !315, metadata !DIExpression()), !dbg !336
    call void @llvm.dbg.declare(metadata i8* %24, metadata !313, metadata !DIExpression()), !dbg !314
    call void @llvm.dbg.declare(metadata i8* %12, metadata !311, metadata !DIExpression()), !dbg !312
    store i64 %3, i64* %29, align 8
    %29 = bitcast i8* %28 to i64*
    %28 = getelementptr inbounds i8, i8* %12, i64 8
    store [0 x i8]* %2, [0 x i8]** %27, align 8
    %27 = bitcast i8* %12 to [0 x i8]**
    call void @llvm.dbg.declare(metadata i8* %14, metadata !309, metadata !DIExpression()), !dbg !310
    store i8 %1, i8* %14, align 1
    call void @llvm.dbg.declare(metadata i8* %16, metadata !307, metadata !DIExpression()), !dbg !308
    store { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* %0, { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }** %26, align 8
    %26 = bitcast i8* %16 to { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }**
    store i64* %4, i64** %25, align 8
    %25 = bitcast i8* %24 to i64**
    %24 = bitcast [8 x i8]* %23 to i8*
    %23 = alloca [8 x i8], align 8
    %22 = bitcast [16 x i8]* %21 to i8*
    %21 = alloca [16 x i8], align 8
    %20 = bitcast [8 x i8]* %19 to i8*
    %19 = alloca [8 x i8], align 8
    %18 = bitcast [128 x i8]* %17 to i8*
    %17 = alloca [128 x i8], align 1
    %16 = bitcast [8 x i8]* %15 to i8*
    %15 = alloca [8 x i8], align 8
    %14 = bitcast [1 x i8]* %13 to i8*
    %13 = alloca [1 x i8], align 1
    %12 = bitcast [16 x i8]* %11 to i8*
    %11 = alloca [16 x i8], align 8
    %10 = bitcast [8 x i8]* %9 to i8*
    %9 = alloca [8 x i8], align 8
    %8 = bitcast [8 x i8]* %7 to i8*
    %7 = alloca [8 x i8], align 8
    %6 = bitcast [8 x i8]* %5 to i8*
    %5 = alloca [8 x i8], align 8
  start:
  define internal void @"_ZN12block_buffer50BlockBuffer$LT$BlockSize$C$block_buffer$$Eager$GT$10digest_pad17hd910bdfee239576cE"({ { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }* nonnull align 1, i8, [0 x i8]* nonnull align 1, i64, i64* nonnull align 8) unnamed_addr #1 !dbg !294 {
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected <2 x i64> for param 1, got i128; injecting bitcast
  declare hidden void @"_ZN4core3num22_$LT$impl$u20$u128$GT$11to_be_bytes17hfc84bedf09b26fa4E"([16 x i8]* noalias nocapture sret align 1 dereferenceable(16), <2 x i64>) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected [16 x i8]* for param 0, got i8*; injecting bitcast
  declare hidden void @"_ZN4core3num22_$LT$impl$u20$u128$GT$11to_be_bytes17hfc84bedf09b26fa4E"([16 x i8]* noalias nocapture sret align 1 dereferenceable(16), <2 x i64>) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:25069 ~ core[aa73]::num::{impl#10}::to_be_bytes)), args: [] }: FnDef(DefId(1:25069 ~ core[aa73]::num::{impl#10}::to_be_bytes), [])) => _ZN4core3num22_$LT$impl$u20$u128$GT$11to_be_bytes17hfc84bedf09b26fa4E
  ). Expected i64** for param 0, got i8*; injecting bitcast
  declare void @"_ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$22finalize_variable_core28_$u7b$$u7b$closure$u7d$$u7d$17h14eb0bc099433765E"(i64** nonnull align 8, { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got i8*; injecting bitcast
  declare internal { [0 x i8]*, i64 } @"_ZN87_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$DerefMut$GT$9deref_mut17h6c39e7824cf5e2e2E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got i8*; injecting bitcast
  declare internal void @"_ZN13generic_array5impls93_$LT$impl$u20$core$$default$$Default$u20$for$u20$generic_array$$GenericArray$LT$T$C$N$GT$$GT$7default17h3f21f368100e5ff6E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* noalias nocapture sret align 1 dereferenceable(128)) unnamed_addr #1
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected i64** for param 0, got i8*; injecting bitcast
  declare void @"_ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$22finalize_variable_core28_$u7b$$u7b$closure$u7d$$u7d$17h14eb0bc099433765E"(i64** nonnull align 8, { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected i64** for param 0, got i8*; injecting bitcast
  declare void @"_ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$22finalize_variable_core28_$u7b$$u7b$closure$u7d$$u7d$17h14eb0bc099433765E"(i64** nonnull align 8, { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(5:75 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core::{closure#0})), args: [i16, Binder { value: extern "RustCall" fn((&'^0 sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>,)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::Sha512VarCore,)] }: Closure(DefId(5:75 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core::{closure#0}), [i16, Binder { value: extern "RustCall" fn((&'^0 sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>,)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::Sha512VarCore,)])) => _ZN86_$LT$sha2$$core_api$$Sha512VarCore$u20$as$u20$digest$$core_api$$VariableOutputCore$GT$22finalize_variable_core28_$u7b$$u7b$closure$u7d$$u7d$17h14eb0bc099433765E
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }*; injecting bitcast
  declare internal { [0 x i8]*, i64 } @"_ZN87_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$DerefMut$GT$9deref_mut17h6c39e7824cf5e2e2E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { i8*, i8* }* for param 0, got i8*; injecting bitcast
  declare align 1 i8* @"_ZN94_$LT$core$$slice$$iter$$IterMut$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4next17h3f5b2dc028934538E"({ i8*, i8* }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:40662 ~ core[aa73]::slice::iter::{impl#190}::next)), args: ['{erased}, u8] }: FnDef(DefId(1:40662 ~ core[aa73]::slice::iter::{impl#190}::next), ['{erased}, u8])) => _ZN94_$LT$core$$slice$$iter$$IterMut$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4next17h3f5b2dc028934538E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:12562 ~ core[aa73]::slice::iter::{impl#2}::into_iter)), args: ['{erased}, u8] }: FnDef(DefId(1:12562 ~ core[aa73]::slice::iter::{impl#2}::into_iter), ['{erased}, u8])) => _ZN4core5slice4iter95_$LT$impl$u20$core$$iter$$traits$$collect$$IntoIterator$u20$for$u20$$RF$mut$u20$$u5b$T$u5d$$GT$9into_iter17hbf854efe9dc55f91E
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }*; injecting bitcast
  declare internal { [0 x i8]*, i64 } @"_ZN87_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$DerefMut$GT$9deref_mut17h6c39e7824cf5e2e2E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10310 ~ core[aa73]::panicking::panic_bounds_check)), args: [] }: FnDef(DefId(1:10310 ~ core[aa73]::panicking::panic_bounds_check), [])) => _ZN4core9panicking18panic_bounds_check17h72883f1f17f18002E
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }*; injecting bitcast
  declare internal { [0 x i8]*, i64 } @"_ZN87_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$DerefMut$GT$9deref_mut17h6c39e7824cf5e2e2E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut u8 kind: &'{erased} mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} mut u8> kind: core::marker::PhantomData<&'{erased} mut u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut u8 kind: *mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const u8 kind: *const u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ptr::NonNull<u8> kind: core::ptr::NonNull<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::IterMut<'{erased}, u8> kind: core::slice::IterMut<'{erased}, u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::Sha512VarCore kind: &'{erased} mut sha2::Sha512VarCore
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut &'{erased} mut sha2::Sha512VarCore kind: &'{erased} mut &'{erased} mut sha2::Sha512VarCore
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(5:75 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core::{closure#0}), [i16, Binder { value: extern "RustCall" fn((&'^0 sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>,)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::Sha512VarCore,)]) kind: Closure(DefId(5:75 ~ sha2[bfc0]::core_api::{impl#13}::finalize_variable_core::{closure#0}), [i16, Binder { value: extern "RustCall" fn((&'^0 sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>,)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::Sha512VarCore,)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager> kind: &'{erased} sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10300 ~ core[aa73]::panicking::panic)), args: [] }: FnDef(DefId(1:10300 ~ core[aa73]::panicking::panic), [])) => _ZN4core9panicking5panic17hbf79c4cbdca7ec62E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow)), args: [] }: FnDef(DefId(1:38839 ~ core[aa73]::panicking::panic_const::panic_const_add_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_add_overflow17h6c8c98a9847b65eeE
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }*; injecting bitcast
  declare internal { [0 x i8]*, i64 } @"_ZN87_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$DerefMut$GT$9deref_mut17h6c39e7824cf5e2e2E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }*; injecting bitcast
  declare internal { [0 x i8]*, i64 } @"_ZN87_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$DerefMut$GT$9deref_mut17h6c39e7824cf5e2e2E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected i64** for param 0, got i8*; injecting bitcast
  declare void @"_ZN82_$LT$digest$$core_api$$wrapper$$CoreWrapper$LT$T$GT$$u20$as$u20$digest$$Update$GT$6update28_$u7b$$u7b$closure$u7d$$u7d$17h00f30f4daf90a871E"(i64** nonnull align 8, [0 x { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }]* nonnull align 1, i64) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13555 ~ core[aa73]::slice::{impl#0}::is_empty)), args: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] }: FnDef(DefId(1:13555 ~ core[aa73]::slice::{impl#0}::is_empty), [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>])) => _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h9bf52e48ed577807E
  ). Expected { { [0 x { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }]*, i64 }, { [0 x i8]*, i64 } }* for param 0, got i8*; injecting bitcast
  declare internal void @"_ZN68_$LT$block_buffer$$Eager$u20$as$u20$block_buffer$$sealed$$Sealed$GT$12split_blocks17heb0e90a1a7afead8E"({ { [0 x { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret align 8 dereferenceable(32), [0 x i8]* nonnull align 1, i64) unnamed_addr #1
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected i64** for param 0, got i8*; injecting bitcast
  declare void @"_ZN82_$LT$digest$$core_api$$wrapper$$CoreWrapper$LT$T$GT$$u20$as$u20$digest$$Update$GT$6update28_$u7b$$u7b$closure$u7d$$u7d$17h00f30f4daf90a871E"(i64** nonnull align 8, [0 x { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }]* nonnull align 1, i64) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(6:199 ~ digest[a657]::core_api::wrapper::{impl#7}::update::{closure#0})), args: [sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>, i16, Binder { value: extern "RustCall" fn((&'^0 [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>],)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>,)] }: Closure(DefId(6:199 ~ digest[a657]::core_api::wrapper::{impl#7}::update::{closure#0}), [sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>, i16, Binder { value: extern "RustCall" fn((&'^0 [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>],)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>,)])) => _ZN82_$LT$digest$$core_api$$wrapper$$CoreWrapper$LT$T$GT$$u20$as$u20$digest$$Update$GT$6update28_$u7b$$u7b$closure$u7d$$u7d$17h00f30f4daf90a871E
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }*; injecting bitcast
  declare { [0 x { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }]*, i64 } @_ZN4core5slice3raw8from_ref17he5225ee2d5924704E({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #2
  ; Function Attrs: nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13451 ~ core[aa73]::slice::raw::from_ref)), args: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] }: FnDef(DefId(1:13451 ~ core[aa73]::slice::raw::from_ref), [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>])) => _ZN4core5slice3raw8from_ref17he5225ee2d5924704E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13737 ~ core[aa73]::slice::{impl#0}::copy_from_slice)), args: [u8] }: FnDef(DefId(1:13737 ~ core[aa73]::slice::{impl#0}::copy_from_slice), [u8])) => _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h09738660dc2f8a29E
  ). Expected { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* for param 0, got { { { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }, i8, {} }*; injecting bitcast
  declare internal { [0 x i8]*, i64 } @"_ZN87_$LT$generic_array$$GenericArray$LT$T$C$N$GT$$u20$as$u20$core$$ops$$deref$$DerefMut$GT$9deref_mut17h6c39e7824cf5e2e2E"({ { { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, { { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, { { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, { { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, { { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, { { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, { { [0 x i8], [0 x i8], i8 }, { [0 x i8], [0 x i8], i8 }, {} }, {} }, {} }, {} }, {} }, {} }, {} } }* nonnull align 1) unnamed_addr #1
  ; Function Attrs: alwaysinline nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17h06847d5e45d97f50E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret align 8 dereferenceable(32), [0 x i8]* nonnull align 1, i64, i64, { { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8) unnamed_addr #0
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13660 ~ core[aa73]::slice::{impl#0}::split_at)), args: [u8] }: FnDef(DefId(1:13660 ~ core[aa73]::slice::{impl#0}::split_at), [u8])) => _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17h06847d5e45d97f50E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38840 ~ core[aa73]::panicking::panic_const::panic_const_sub_overflow)), args: [] }: FnDef(DefId(1:38840 ~ core[aa73]::panicking::panic_const::panic_const_sub_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_sub_overflow17hcf4077fe47f7718aE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>] kind: &'{erased} [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::OidSha512 kind: sha2::OidSha512
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512) kind: (sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<(sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)> kind: core::marker::PhantomData<(sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512)>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u128 kind: u128
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u64; 8_usize] kind: [u64; 8_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::Sha512VarCore kind: sha2::Sha512VarCore
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512> kind: sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512> kind: &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512> kind: &'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(6:199 ~ digest[a657]::core_api::wrapper::{impl#7}::update::{closure#0}), [sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>, i16, Binder { value: extern "RustCall" fn((&'^0 [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>],)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>,)]) kind: Closure(DefId(6:199 ~ digest[a657]::core_api::wrapper::{impl#7}::update::{closure#0}), [sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>, i16, Binder { value: extern "RustCall" fn((&'^0 [sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>],)), bound_vars: [Region(BrAnon)] }, (&'{erased} mut &'{erased} mut sha2::digest::core_api::CtVariableCoreWrapper<sha2::Sha512VarCore, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::OidSha512>,)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8] kind: [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [u8] kind: &'{erased} [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager> kind: &'{erased} mut sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/lib.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/lib.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::block_buffer::Eager kind: sha2::digest::block_buffer::Eager
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<sha2::digest::block_buffer::Eager> kind: core::marker::PhantomData<sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B0 kind: sha2::digest::typenum::B0
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::B1 kind: sha2::digest::typenum::B1
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UTerm kind: sha2::digest::typenum::UTerm
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0> kind: sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<u8> kind: core::marker::PhantomData<u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8; 0_usize] kind: [u8; 0_usize]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]> kind: sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>> kind: sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplEven<u8, sha2::digest::generic_array::GenericArrayImplOdd<u8, [u8; 0_usize]>>>>>>>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>> kind: sha2::digest::generic_array::GenericArray<u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager> kind: sha2::digest::block_buffer::BlockBuffer<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::block_buffer::Eager>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/5mo2fdxbx1ctc4g051hsbe60l"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `5mo2fdxbx1ctc4g051hsbe60l`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:10300 ~ core[aa73]::panicking::panic)), args: [] }: FnDef(DefId(1:10300 ~ core[aa73]::panicking::panic), [])) => _ZN4core9panicking5panic17hbf79c4cbdca7ec62E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u32 kind: u32
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::panic::Location<'{erased}> kind: core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::panic::Location<'{erased}> kind: &'{erased} core::panic::Location<'{erased}>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: sha2::digest::InvalidOutputSize kind: sha2::digest::InvalidOutputSize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} sha2::digest::InvalidOutputSize kind: &'{erased} sha2::digest::InvalidOutputSize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: str kind: str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} str kind: &'{erased} str
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/e5jkl770l5oqu03trby2vw7yi"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `e5jkl770l5oqu03trby2vw7yi`
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0})), args: [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)] }: Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])) => _ZN110_$LT$core$$iter$$adapters$$enumerate$$Enumerate$LT$I$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4fold9enumerate28_$u7b$$u7b$closure$u7d$$u7d$17hea57813e646fc8f2E
  ). Expected i8** for param 1, got i8*; injecting bitcast
  declare zeroext i1 @"_ZN78_$LT$core$$ptr$$non_null$$NonNull$LT$T$GT$$u20$as$u20$core$$cmp$$PartialEq$GT$2eq17hc0c57f9dc811aabcE"(i8** nonnull align 8, i8** nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected i8** for param 0, got i8*; injecting bitcast
  declare zeroext i1 @"_ZN78_$LT$core$$ptr$$non_null$$NonNull$LT$T$GT$$u20$as$u20$core$$cmp$$PartialEq$GT$2eq17hc0c57f9dc811aabcE"(i8** nonnull align 8, i8** nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]) kind: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]) kind: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)]) kind: Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0})), args: [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)] }: Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])) => _ZN110_$LT$core$$iter$$adapters$$enumerate$$Enumerate$LT$I$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$4fold9enumerate28_$u7b$$u7b$closure$u7d$$u7d$17h1a052d760ff96ed0E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2500 ~ core[aa73]::ptr::non_null::{impl#3}::offset_from_unsigned)), args: [u8] }: FnDef(DefId(1:2500 ~ core[aa73]::ptr::non_null::{impl#3}::offset_from_unsigned), [u8])) => _ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h9320d2fd289c2f7eE
  ). Expected i8** for param 1, got i8*; injecting bitcast
  declare zeroext i1 @"_ZN78_$LT$core$$ptr$$non_null$$NonNull$LT$T$GT$$u20$as$u20$core$$cmp$$PartialEq$GT$2eq17hc0c57f9dc811aabcE"(i8** nonnull align 8, i8** nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  ). Expected i8** for param 0, got i8*; injecting bitcast
  declare zeroext i1 @"_ZN78_$LT$core$$ptr$$non_null$$NonNull$LT$T$GT$$u20$as$u20$core$$cmp$$PartialEq$GT$2eq17hc0c57f9dc811aabcE"(i8** nonnull align 8, i8** nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2558 ~ core[aa73]::ptr::non_null::{impl#14}::eq)), args: [u8] }: FnDef(DefId(1:2558 ~ core[aa73]::ptr::non_null::{impl#14}::eq), [u8])) => _ZN78_$LT$core$$ptr$$non_null$$NonNull$LT$T$GT$$u20$as$u20$core$$cmp$$PartialEq$GT$2eq17hc0c57f9dc811aabcE
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut usize kind: &'{erased} mut usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut &'{erased} mut usize kind: &'{erased} mut &'{erased} mut usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]) kind: &'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]) kind: Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]) kind: Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)]) kind: Closure(DefId(1:6508 ~ core[aa73]::iter::adapters::enumerate::{impl#1}::fold::enumerate::{closure#0}), [&'{erased} mut u8, (), Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), i16, Binder { value: extern "RustCall" fn(((), &'{erased} mut u8)), bound_vars: [] }, (Closure(DefId(1:9175 ~ core[aa73]::iter::traits::iterator::Iterator::for_each::call::{closure#0}), [(usize, &'{erased} mut u8), Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]), i16, Binder { value: extern "RustCall" fn(((), (usize, &'{erased} mut u8))), bound_vars: [] }, (Closure(DefId(8:478 ~ generic_array[47b5]::{impl#18}::generate::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), i16, Binder { value: extern "RustCall" fn(((usize, &'{erased} mut u8),)), bound_vars: [] }, (&'{erased} mut Closure(DefId(8:50 ~ generic_array[47b5]::impls::{impl#0}::default::{closure#0}), [u8, sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UInt<sha2::digest::typenum::UTerm, sha2::digest::typenum::B1>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, sha2::digest::typenum::B0>, i16, Binder { value: extern "RustCall" fn((usize,)) -> u8, bound_vars: [] }, ()]), &'{erased} mut &'{erased} mut usize)]),)]), usize)])
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: () kind: ()
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::IterMut<'{erased}, u8> kind: core::slice::IterMut<'{erased}, u8>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2500 ~ core[aa73]::ptr::non_null::{impl#3}::offset_from_unsigned)), args: [u64] }: FnDef(DefId(1:2500 ~ core[aa73]::ptr::non_null::{impl#3}::offset_from_unsigned), [u64])) => _ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h35e39462abc0fe10E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut core::slice::Iter<'{erased}, u64> kind: &'{erased} mut core::slice::Iter<'{erased}, u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs"))
  ). Expected { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h96cf66b4b6523c29E"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* noalias nocapture sret align 8 dereferenceable(32), [0 x i8]* nonnull align 1, i64, i64) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13663 ~ core[aa73]::slice::{impl#0}::split_at_mut_unchecked)), args: [u8] }: FnDef(DefId(1:13663 ~ core[aa73]::slice::{impl#0}::split_at_mut_unchecked), [u8])) => _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h96cf66b4b6523c29E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38840 ~ core[aa73]::panicking::panic_const::panic_const_sub_overflow)), args: [] }: FnDef(DefId(1:38840 ~ core[aa73]::panicking::panic_const::panic_const_sub_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_sub_overflow17hcf4077fe47f7718aE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38848 ~ core[aa73]::panicking::panic_const::panic_const_rem_by_zero)), args: [] }: FnDef(DefId(1:38848 ~ core[aa73]::panicking::panic_const::panic_const_rem_by_zero), [])) => _ZN4core9panicking11panic_const23panic_const_rem_by_zero17h134cc87be00da88eE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2489 ~ core[aa73]::ptr::non_null::{impl#3}::cast)), args: [[u64], u64] }: FnDef(DefId(1:2489 ~ core[aa73]::ptr::non_null::{impl#3}::cast), [[u64], u64])) => _ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hb0b3d5f6a7bda10bE
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2577 ~ core[aa73]::ptr::non_null::{impl#20}::from)), args: ['{erased}, [u64]] }: FnDef(DefId(1:2577 ~ core[aa73]::ptr::non_null::{impl#20}::from), ['{erased}, [u64]])) => _ZN90_$LT$core$$ptr$$non_null$$NonNull$LT$T$GT$$u20$as$u20$core$$convert$$From$LT$$RF$T$GT$$GT$4from17h40dcfb1a4ead6229E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u64] kind: [u64]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} [u64] kind: &'{erased} [u64]
  ). Expected { i64, { i64, i64 } }* for param 0, got i8*; injecting bitcast
  declare void @"_ZN91_$LT$core$$slice$$iter$$Iter$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$9size_hint17h033de7b0dddc6009E"({ i64, { i64, i64 } }* noalias nocapture sret align 8 dereferenceable(24), { i8*, i8* }* nonnull align 8) unnamed_addr #1
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::slice::Iter<'{erased}, u64> kind: &'{erased} core::slice::Iter<'{erased}, u64>
  ). Expected { i64, { i64, i64 } }* for param 0, got i8*; injecting bitcast
  }
    unreachable, !dbg !77
    call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h3f991d4a26d38227E({ { [0 x i8]*, i64 }, i32, i32 }* nonnull align 8 bitcast (<{ i8*, [16 x i8] }>* @"private$2" to { { [0 x i8]*, i64 }, i32, i32 }*)), !dbg !77
  panic:                                            ; preds = %start

    ret void, !dbg !84
    store i64 %32, i64* %37, align 8, !dbg !83
    %37 = bitcast i8* %36 to i64*, !dbg !83
    %36 = getelementptr inbounds i8, i8* %34, i64 8, !dbg !83
    store i64 %29, i64* %35, align 8, !dbg !83
    %35 = bitcast i8* %34 to i64*, !dbg !83
    %34 = getelementptr inbounds i8, i8* %33, i64 8, !dbg !83
    %33 = bitcast { i64, { i64, i64 } }* %0 to i8*, !dbg !83
    %32 = load i64, i64* %31, align 8, !dbg !83
    %31 = bitcast i8* %30 to i64*, !dbg !83
    %30 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !83
    %29 = load i64, i64* %28, align 8, !dbg !83
    %28 = bitcast i8* %7 to i64*, !dbg !83
    store i64 %22, i64* %27, align 8, !dbg !83
    %27 = bitcast { i64, { i64, i64 } }* %0 to i64*, !dbg !83
    store i64 1, i64* %26, align 8, !dbg !82
    %26 = bitcast i8* %7 to i64*, !dbg !82
    store i64 %22, i64* %25, align 8, !dbg !82
    %25 = bitcast i8* %24 to i64*, !dbg !82
    %24 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !82
    call void @llvm.dbg.declare(metadata i8* %3, metadata !79, metadata !DIExpression()), !dbg !81
    store i64 %22, i64* %23, align 8, !dbg !77
    %23 = bitcast i8* %3 to i64*, !dbg !77
    %22 = udiv i64 %16, %20, !dbg !77
  bb2:                                              ; preds = %start

    br i1 %21, label %panic, label %bb2, !dbg !77
    %21 = icmp eq i64 %20, 0, !dbg !77
    %20 = load i64, i64* %19, align 8, !dbg !78
    %19 = bitcast i8* %18 to i64*, !dbg !78
    %18 = getelementptr inbounds i8, i8* %17, i64 32, !dbg !78
    %17 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }* %1 to i8*, !dbg !78
    %16 = call i64 @"_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17hdc95a117ed84fbb1E"([0 x i8]* %12, i64 %15), !dbg !77
    %15 = load i64, i64* %14, align 8, !dbg !77
    %14 = bitcast i8* %13 to i64*, !dbg !77
    %13 = getelementptr inbounds i8, i8* %10, i64 8, !dbg !77
    %12 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !77
    %11 = bitcast i8* %10 to [0 x i8]**, !dbg !77
    %10 = getelementptr inbounds i8, i8* %9, i64 16, !dbg !77
    %9 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }* %1 to i8*, !dbg !77
    call void @llvm.dbg.declare(metadata i8* %5, metadata !75, metadata !DIExpression()), !dbg !76
    store { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }* %1, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }** %8, align 8
    %8 = bitcast i8* %5 to { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }**
    %7 = bitcast [16 x i8]* %6 to i8*
    %6 = alloca [16 x i8], align 8
    %5 = bitcast [8 x i8]* %4 to i8*
    %4 = alloca [8 x i8], align 8
    %3 = bitcast [8 x i8]* %2 to i8*
    %2 = alloca [8 x i8], align 8
  start:
  define void @"_ZN101_$LT$core$$slice$$iter$$ChunksExactMut$LT$T$GT$$u20$as$u20$core$$iter$$traits$$iterator$$Iterator$GT$9size_hint17h72ce886c6279c04cE"({ i64, { i64, i64 } }* noalias nocapture sret align 8 dereferenceable(24), { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, i64, {} }* nonnull align 8) unnamed_addr #1 !dbg !51 {
  ; Function Attrs: inlinehint nounwind
  DEBUG rustc_codegen_nvvm::builder: type mismatch in function call of (
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/zip.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/zip.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:8308 ~ core[aa73]::iter::adapters::zip::{impl#0}::new)), args: [core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>] }: FnDef(DefId(1:8308 ~ core[aa73]::iter::adapters::zip::{impl#0}::new), [core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>])) => _ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h1d73e03170884607E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} u64 kind: &'{erased} u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} u64> kind: core::marker::PhantomData<&'{erased} u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::Iter<'{erased}, u64> kind: core::slice::Iter<'{erased}, u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::iter::Zip<core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>> kind: core::iter::Zip<core::slice::ChunksExactMut<'{erased}, u8>, core::slice::Iter<'{erased}, u64>>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const u64 kind: *const u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ptr::NonNull<u64> kind: core::ptr::NonNull<u64>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *const u8 kind: *const u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::ptr::NonNull<u8> kind: core::ptr::NonNull<u8>
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2376 ~ core[aa73]::ptr::metadata::metadata)), args: [[u8]] }: FnDef(DefId(1:2376 ~ core[aa73]::ptr::metadata::metadata), [[u8]])) => _ZN4core3ptr8metadata8metadata17he7b0ae79ea1058e3E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut u64 kind: *mut u64
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:25810 ~ core[aa73]::ptr::mut_ptr::{impl#0}::add::precondition_check)), args: [] }: FnDef(DefId(1:25810 ~ core[aa73]::ptr::mut_ptr::{impl#0}::add::precondition_check), [])) => _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17hc776c183d9ddbe30E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut u8 kind: *mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:25218 ~ core[aa73]::num::{impl#11}::unchecked_add::precondition_check)), args: [] }: FnDef(DefId(1:25218 ~ core[aa73]::num::{impl#11}::unchecked_add::precondition_check), [])) => _ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add18precondition_check17h3998e9341fc3e9a7E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:2956 ~ core[aa73]::ub_checks::check_language_ub)), args: [] }: FnDef(DefId(1:2956 ~ core[aa73]::ub_checks::check_language_ub), [])) => _ZN4core9ub_checks17check_language_ub17hfaa6a2ee487d6951E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ub_checks.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/mem/mod.rs"))
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38847 ~ core[aa73]::panicking::panic_const::panic_const_div_by_zero)), args: [] }: FnDef(DefId(1:38847 ~ core[aa73]::panicking::panic_const::panic_const_div_by_zero), [])) => _ZN4core9panicking11panic_const23panic_const_div_by_zero17h3f991d4a26d38227E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} core::slice::ChunksExactMut<'{erased}, u8> kind: &'{erased} core::slice::ChunksExactMut<'{erased}, u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u64 kind: u64
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::option::Option<usize> kind: core::option::Option<usize>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: (usize, core::option::Option<usize>) kind: (usize, core::option::Option<usize>)
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut)), args: ['{erased}, u8] }: FnDef(DefId(1:13448 ~ core[aa73]::slice::raw::from_raw_parts_mut), ['{erased}, u8])) => _ZN4core5slice3raw18from_raw_parts_mut17h0b15c6eeb412adb8E
  DEBUG rustc_codegen_nvvm::context: get_fn(Instance { def: Item(DefId(1:38841 ~ core[aa73]::panicking::panic_const::panic_const_mul_overflow)), args: [] }: FnDef(DefId(1:38841 ~ core[aa73]::panicking::panic_const::panic_const_mul_overflow), [])) => _ZN4core9panicking11panic_const24panic_const_mul_overflow17h3bf17d19f8fc5e92E
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut u8 kind: &'{erased} mut u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::marker::PhantomData<&'{erased} mut u8> kind: core::marker::PhantomData<&'{erased} mut u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: *mut [u8] kind: *mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: core::slice::ChunksExactMut<'{erased}, u8> kind: core::slice::ChunksExactMut<'{erased}, u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut core::slice::ChunksExactMut<'{erased}, u8> kind: &'{erased} mut core::slice::ChunksExactMut<'{erased}, u8>
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: usize kind: usize
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_basic_type_di_node: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: u8 kind: u8
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: [u8] kind: [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: type_di_node: &'{erased} mut [u8] kind: &'{erased} mut [u8]
  DEBUG rustc_codegen_nvvm::debug_info::metadata: abs_path="/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs"
  DEBUG rustc_codegen_nvvm::debug_info::metadata: working_directory=LocalPath("/root/ed25519-vanity-rs/kernel")
  DEBUG rustc_codegen_nvvm::debug_info::metadata: source_file.name=Real(LocalPath("/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs"))
  DEBUG rustc_codegen_nvvm::debug_info::metadata: build_compile_unit_di_node: "src/lib.rs/@/91ix4hlegt51brsi0rz8pqjxs"
  DEBUG rustc_codegen_nvvm::context: Creating new CodegenCx
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `91ix4hlegt51brsi0rz8pqjxs`
  DEBUG rustc_codegen_nvvm: Creating llvm module with name `6qchkc6750qqgxlsiw6xemhqd`
  DEBUG rustc_codegen_nvvm: Codegen crate
  DEBUG rustc_codegen_nvvm::link: getting rlib metadata for /root/ed25519-vanity-rs/target/cuda-builder/debug/deps/libcuda_std_macros-0ae367097ff7eb54.so
  DEBUG rustc_codegen_nvvm::link: getting rlib metadata for /root/ed25519-vanity-rs/target/cuda-builder/debug/deps/libpaste-ac502cfd392638e9.so

  --- stderr
      Updating git repository `https://github.com/LegNeato/Rust-CUDA.git`
      Updating crates.io index
       Locking 9 packages to latest Rust 1.87.0-nightly compatible versions
        Adding block-buffer v0.10.4
        Adding crypto-common v0.1.6
        Adding cuda_std v0.2.2 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
        Adding cuda_std_macros v0.2.0 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
        Adding digest v0.10.7
        Adding generic-array v0.14.7
        Adding sha2 v0.10.9
        Adding typenum v1.18.0
        Adding version_check v0.9.5
     Compiling compiler_builtins v0.1.148
     Compiling core v0.0.0 (/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core)
     Compiling semver v1.0.26
     Compiling typenum v1.18.0
     Compiling libm v0.2.15
     Compiling version_check v0.9.5
     Compiling autocfg v1.4.0
     Compiling proc-macro2 v1.0.95
     Compiling unicode-ident v1.0.18
     Compiling paste v1.0.15
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
     Compiling generic-array v0.14.7
     Compiling num-traits v0.2.19
     Compiling rustc_version v0.4.1
     Compiling quote v1.0.40
     Compiling vek v0.17.1
     Compiling syn v2.0.101
     Compiling cuda_std_macros v0.2.0 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
     Compiling rustc-std-workspace-core v1.99.0 (/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-core)
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
     Compiling alloc v0.0.0 (/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc)
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
     Compiling cfg-if v1.0.0
     Compiling bitflags v2.9.1
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
  warning: some trace filter directives would enable traces that are disabled statically
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
     Compiling half v2.6.0
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
     Compiling block-buffer v0.10.4
     Compiling crypto-common v0.1.6
  warning: some trace filter directives would enable traces that are disabled statically
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   | `trace` would enable the TRACE level for all targets
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
     Compiling digest v0.10.7
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
     Compiling sha2 v0.10.9
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
     Compiling num-integer v0.1.46
     Compiling approx v0.5.1
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
  warning: some trace filter directives would enable traces that are disabled statically
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
     Compiling cuda_std v0.2.2 (https://github.com/LegNeato/Rust-CUDA.git?branch=fixsha2#4b56c818)
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
     Compiling kernel v0.1.0 (/root/ed25519-vanity-rs/kernel)
  warning: some trace filter directives would enable traces that are disabled statically
   | `trace` would enable the TRACE level for all targets
   = note: the static max level is `debug`
   = help: to enable TRACE logging, remove the `max_level_debug` feature from the `tracing` crate
  warning: unused attribute
   --> <crate attribute>:1:1
    |
  1 | no_std
    | ^^^^^^ help: remove this attribute
    |
  note: attribute also specified here
   --> src/lib.rs:1:1
    |
  1 | #![no_std]
    | ^^^^^^^^^^
    = note: `#[warn(unused_attributes)]` on by default

  warning: unused variable: `thread_idx`
    --> src/lib.rs:28:9
     |
  28 |     let thread_idx = cuda_std::thread::index() as usize;
     |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_thread_idx`
     |
     = note: `#[warn(unused_variables)]` on by default

  warning: unused variable: `hashed_private_key_bytes`
    --> src/lib.rs:34:13
     |
  34 |     let mut hashed_private_key_bytes = &mut hashed_private_key_bytes[0..32];
     |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hashed_private_key_bytes`

  warning: unused variable: `vanity_prefix_ptr`
    --> src/lib.rs:17:5
     |
  17 |     vanity_prefix_ptr: *const u8,
     |     ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_vanity_prefix_ptr`

  warning: unused variable: `vanity_prefix_len`
    --> src/lib.rs:18:5
     |
  18 |     vanity_prefix_len: usize,
     |     ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_vanity_prefix_len`

  warning: unused variable: `rng_seed`
    --> src/lib.rs:19:5
     |
  19 |     rng_seed: u64,
     |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rng_seed`

  warning: unused variable: `found_matches_slice_ptr`
    --> src/lib.rs:21:5
     |
  21 |     found_matches_slice_ptr: *mut cuda_std::atomic::AtomicF32,
     |     ^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_found_matches_slice_ptr`

  warning: unused variable: `found_private_key_ptr`
    --> src/lib.rs:22:5
     |
  22 |     found_private_key_ptr: *mut u8,
     |     ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_found_private_key_ptr`

  warning: unused variable: `found_public_key_ptr`
    --> src/lib.rs:23:5
     |
  23 |     found_public_key_ptr: *mut u8,
     |     ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_found_public_key_ptr`

  warning: unused variable: `found_bs58_encoded_public_key_ptr`
    --> src/lib.rs:24:5
     |
  24 |     found_bs58_encoded_public_key_ptr: *mut u8,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_found_bs58_encoded_public_key_ptr`

  warning: unused variable: `found_thread_idx_slice_ptr`
    --> src/lib.rs:25:5
     |
  25 |     found_thread_idx_slice_ptr: *mut u32,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_found_thread_idx_slice_ptr`

  warning: variable does not need to be mutable
    --> src/lib.rs:34:9
     |
  34 |     let mut hashed_private_key_bytes = &mut hashed_private_key_bytes[0..32];
     |         ----^^^^^^^^^^^^^^^^^^^^^^^^
     |         |
     |         help: remove this `mut`
     |
     = note: `#[warn(unused_mut)]` on by default

  Dumped bitcode to /tmp/nvvm_module_0.bc
  Dumped bitcode to /tmp/nvvm_module_1.bc
  Dumped bitcode to /tmp/nvvm_module_2.bc
  Dumped bitcode to /tmp/nvvm_module_3.bc

  thread 'rustc' panicked at /root/.cargo/git/checkouts/rust-cuda-97fe623ab90e914e/4b56c81/crates/rustc_codegen_nvvm/src/nvvm.rs:188:25:
  Failed to parse module bitcode #3: Explicit load/store type does not match pointee type of pointer operand (Producer: 'LLVM7.0.1' Reader: 'LLVM 7.0.1')
  stack backtrace:
     0:     0x77cb9ebbedf4 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::hdbd106d724e72c20
     1:     0x77cb9f4057e2 - core::fmt::write::h861eecc74abebf7a
     2:     0x77cba044dd51 - std::io::Write::write_fmt::h493b3152b071fba0
     3:     0x77cb9ebbec52 - std::sys::backtrace::BacktraceLock::print::h71f315c25fc266cb
     4:     0x77cb9ebc1532 - std::panicking::default_hook::{{closure}}::h8019dc6a2c6c0fe7
     5:     0x77cb9ebc1124 - std::panicking::default_hook::h497f769686a88dd6
     6:     0x77cb9dd18417 - std[e7ccd300aecc5933]::panicking::update_hook::<alloc[8cc49891b291256f]::boxed::Box<rustc_driver_impl[b622dd38a520489a]::install_ice_hook::{closure#1}>>::{closure#0}
     7:     0x77cb9dd18417 - std[e7ccd300aecc5933]::panicking::update_hook::<alloc[8cc49891b291256f]::boxed::Box<rustc_driver_impl[b622dd38a520489a]::install_ice_hook::{closure#1}>>::{closure#0}
     8:     0x77cb9ebc1da3 - std::panicking::rust_panic_with_hook::h98fc165e90ef379e
     9:     0x77cb9ebc1a9a - std::panicking::begin_panic_handler::{{closure}}::h2c1a60d0a908eaec
    10:     0x77cb9ebbf2c9 - std::sys::backtrace::__rust_end_short_backtrace::he8aba8f9b7ddf304
    11:     0x77cb9ebc175d - rust_begin_unwind
    12:     0x77cb9b85a680 - core::panicking::panic_fmt::hcbf39f8c1e585f84
    13:     0x77cb8d3ef8d7 - rustc_codegen_nvvm::nvvm::merge_llvm_modules::h60b54695501c17fc
    14:     0x77cb8d3ee3d6 - rustc_codegen_nvvm::nvvm::codegen_bitcode_modules::hd502d8514e08e76a
    15:     0x77cb8d3e8011 - rustc_codegen_nvvm::link::codegen_into_ptx_file::h9c11fb7b3e7302fe
    16:     0x77cb8d3e72b0 - rustc_codegen_nvvm::link::link_exe::h0cd31ebadf3c4882
    17:     0x77cb8d3e5f0f - rustc_codegen_nvvm::link::link::h68d39a7c6f77553e
    18:     0x77cb8d3f6c5a - <rustc_codegen_nvvm::NvvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::link::h2c924544c34ace19
    19:     0x77cba04f7b25 - <rustc_interface[f15b12210e2206a6]::queries::Linker>::link
    20:     0x77cba0503ba3 - rustc_interface[f15b12210e2206a6]::interface::run_compiler::<(), rustc_driver_impl[b622dd38a520489a]::run_compiler::{closure#0}>::{closure#1}
    21:     0x77cba0359bc8 - std[e7ccd300aecc5933]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[f15b12210e2206a6]::util::run_in_thread_with_globals<rustc_interface[f15b12210e2206a6]::util::run_in_thread_pool_with_globals<rustc_interface[f15b12210e2206a6]::interface::run_compiler<(), rustc_driver_impl[b622dd38a520489a]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>
    22:     0x77cba035a4b4 - <<std[e7ccd300aecc5933]::thread::Builder>::spawn_unchecked_<rustc_interface[f15b12210e2206a6]::util::run_in_thread_with_globals<rustc_interface[f15b12210e2206a6]::util::run_in_thread_pool_with_globals<rustc_interface[f15b12210e2206a6]::interface::run_compiler<(), rustc_driver_impl[b622dd38a520489a]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[9e5e7b8b77114b88]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
    23:     0x77cba035b8ab - std::sys::pal::unix::thread::Thread::new::thread_start::h20288ab9ea215a81
    24:     0x77cb9a48aaa4 - <unknown>
    25:     0x77cb9a517a34 - clone
    26:                0x0 - <unknown>

  error: the compiler unexpectedly panicked. this is a bug.

  note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md

  note: please make sure that you have updated to the latest nightly

  note: please attach the file at `/root/ed25519-vanity-rs/kernel/rustc-ice-2025-06-04T02_20_44-49610.txt` to your bug report

  note: compiler flags: --crate-type cdylib --crate-type rlib -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED] -Z unstable-options -Z codegen-backend=/root/ed25519-vanity-rs/target/release/librustc_codegen_nvvm.so -Z crate-attr=feature(register_tool) -Z crate-attr=register_tool(nvvm_internal) -Z crate-attr=no_std -Z saturating_float_casts=false -C llvm-args=-arch=compute_61 -opt=0 --override-libm

  note: some of the compiler flags provided by cargo are hidden

  query stack during panic:
  end of query stack

  error: the compiler unexpectedly panicked. this is a bug.

  note: we would appreciate a bug report: https://github.com/Rust-GPU/Rust-CUDA/issues/new

  note: please make sure that you have updated to the latest nightly

  note: please attach the file at `/root/ed25519-vanity-rs/kernel/rustc-ice-2025-06-04T02_20_44-49610.txt` to your bug report

  note: compiler flags: --crate-type cdylib --crate-type rlib -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED] -Z unstable-options -Z codegen-backend=/root/ed25519-vanity-rs/target/release/librustc_codegen_nvvm.so -Z crate-attr=feature(register_tool) -Z crate-attr=register_tool(nvvm_internal) -Z crate-attr=no_std -Z saturating_float_casts=false -C llvm-args=-arch=compute_61 -opt=0 --override-libm

  note: some of the compiler flags provided by cargo are hidden

  query stack during panic:
  end of query stack
  note: `rust-cuda` version `0.3.0`

  warning: `kernel` (lib) generated 12 warnings (run `cargo fix --lib -p kernel` to apply 2 suggestions)
  error: could not compile `kernel` (lib); 12 warnings emitted

  Caused by:
    process didn't exit successfully: `/root/.rustup/toolchains/nightly-2025-03-02-x86_64-unknown-linux-gnu/bin/rustc --crate-name kernel --edition=2024 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type cdylib --crate-type rlib --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=59533d89ae5b5c20 --out-dir /root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps --target nvptx64-nvidia-cuda -C incremental=/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/incremental -L dependency=/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps -L dependency=/root/ed25519-vanity-rs/target/cuda-builder/debug/deps --extern 'noprelude:alloc=/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/liballoc-ab3f592357d80b0a.rlib' --extern 'noprelude:compiler_builtins=/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libcompiler_builtins-0c9662579b4d91e2.rlib' --extern 'noprelude:core=/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libcore-6832e8ca7564d772.rlib' --extern cuda_std=/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libcuda_std-9da726b79a5a26e3.rlib --extern sha2=/root/ed25519-vanity-rs/target/cuda-builder/nvptx64-nvidia-cuda/debug/deps/libsha2-1b373688a9c6ef8a.rlib -Z unstable-options -Zcodegen-backend=/root/ed25519-vanity-rs/target/release/librustc_codegen_nvvm.so '-Zcrate-attr=feature(register_tool)' '-Zcrate-attr=register_tool(nvvm_internal)' -Zcrate-attr=no_std -Zsaturating_float_casts=false '-Cllvm-args=-arch=compute_61 -opt=0 --override-libm'` (exit status: 101)

  thread 'main' panicked at build.rs:32:10:
  called `Result::unwrap()` on an `Err` value: BuildFailed
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
